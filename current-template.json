{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Description": "CloudOps Assistant ? Day 8 AI Terraform Explainer",
    "Outputs": {
        "CloudOpsAssistantApi": {
            "Description": "API Gateway endpoint URL for CloudOps Assistant",
            "Value": {
                "Fn::Sub": "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/"
            },
            "Export": {
                "Name": "CloudOpsAssistantApiUrl"
            }
        },
        "TerraformPlansTableName": {
            "Description": "DynamoDB table for storing terraform plans",
            "Value": {
                "Ref": "TerraformPlansTable"
            },
            "Export": {
                "Name": "CloudOpsTerraformPlansTable"
            }
        },
        "CostCacheTableName": {
            "Description": "DynamoDB table for caching cost data",
            "Value": {
                "Ref": "CostCacheTable"
            },
            "Export": {
                "Name": "CloudOpsCostCacheTable"
            }
        },
        "UserPoolId": {
            "Description": "Cognito User Pool ID for authentication",
            "Value": {
                "Ref": "CloudOpsUserPool"
            },
            "Export": {
                "Name": "CloudOpsUserPoolId"
            }
        },
        "UserPoolClientId": {
            "Description": "Cognito User Pool Client ID",
            "Value": {
                "Ref": "CloudOpsUserPoolClient"
            },
            "Export": {
                "Name": "CloudOpsUserPoolClientId"
            }
        }
    },
    "Resources": {
        "DriftConfigFunctionDeleteOptionsPermissionProd": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
                "Action": "lambda:InvokeFunction",
                "FunctionName": {
                    "Ref": "DriftConfigFunction"
                },
                "Principal": "apigateway.amazonaws.com",
                "SourceArn": {
                    "Fn::Sub": [
                        "arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${__ApiId__}/${__Stage__}/OPTIONS/drift/delete/*",
                        {
                            "__ApiId__": {
                                "Ref": "ServerlessRestApi"
                            },
                            "__Stage__": "*"
                        }
                    ]
                }
            }
        },
        "PlanHistoryFunctionCompareApiPermissionProd": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
                "Action": "lambda:InvokeFunction",
                "FunctionName": {
                    "Ref": "PlanHistoryFunction"
                },
                "Principal": "apigateway.amazonaws.com",
                "SourceArn": {
                    "Fn::Sub": [
                        "arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${__ApiId__}/${__Stage__}/GET/compare-plans/*/*",
                        {
                            "__ApiId__": {
                                "Ref": "ServerlessRestApi"
                            },
                            "__Stage__": "*"
                        }
                    ]
                }
            }
        },
        "BudgetManagerFunctionConfigureBudgetApiPermissionProd": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
                "Action": "lambda:InvokeFunction",
                "FunctionName": {
                    "Ref": "BudgetManagerFunction"
                },
                "Principal": "apigateway.amazonaws.com",
                "SourceArn": {
                    "Fn::Sub": [
                        "arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${__ApiId__}/${__Stage__}/POST/budgets/configure",
                        {
                            "__ApiId__": {
                                "Ref": "ServerlessRestApi"
                            },
                            "__Stage__": "*"
                        }
                    ]
                }
            }
        },
        "CloudOpsUserPoolClient": {
            "Type": "AWS::Cognito::UserPoolClient",
            "Properties": {
                "UserPoolId": {
                    "Ref": "CloudOpsUserPool"
                },
                "ClientName": "cloudops-assistant-client-v2",
                "GenerateSecret": false,
                "ExplicitAuthFlows": [
                    "ALLOW_USER_SRP_AUTH",
                    "ALLOW_REFRESH_TOKEN_AUTH",
                    "ALLOW_ADMIN_USER_PASSWORD_AUTH"
                ],
                "TokenValidityUnits": {
                    "AccessToken": "hours",
                    "IdToken": "hours",
                    "RefreshToken": "days"
                },
                "AccessTokenValidity": 24,
                "IdTokenValidity": 24,
                "RefreshTokenValidity": 30
            },
            "Metadata": {
                "SamResourceId": "CloudOpsUserPoolClient"
            }
        },
        "PostmortemGeneratorFunctionSuggestOptionsPermissionProd": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
                "Action": "lambda:InvokeFunction",
                "FunctionName": {
                    "Ref": "PostmortemGeneratorFunction"
                },
                "Principal": "apigateway.amazonaws.com",
                "SourceArn": {
                    "Fn::Sub": [
                        "arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${__ApiId__}/${__Stage__}/OPTIONS/postmortems/suggest",
                        {
                            "__ApiId__": {
                                "Ref": "ServerlessRestApi"
                            },
                            "__Stage__": "*"
                        }
                    ]
                }
            }
        },
        "DriftConfigFunctionRole": {
            "Type": "AWS::IAM::Role",
            "Properties": {
                "AssumeRolePolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                        {
                            "Action": [
                                "sts:AssumeRole"
                            ],
                            "Effect": "Allow",
                            "Principal": {
                                "Service": [
                                    "lambda.amazonaws.com"
                                ]
                            }
                        }
                    ]
                },
                "ManagedPolicyArns": [
                    "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
                ],
                "Policies": [
                    {
                        "PolicyName": "DriftConfigFunctionRolePolicy0",
                        "PolicyDocument": {
                            "Statement": [
                                {
                                    "Action": [
                                        "dynamodb:GetItem",
                                        "dynamodb:DeleteItem",
                                        "dynamodb:PutItem",
                                        "dynamodb:Scan",
                                        "dynamodb:Query",
                                        "dynamodb:UpdateItem",
                                        "dynamodb:BatchWriteItem",
                                        "dynamodb:BatchGetItem",
                                        "dynamodb:DescribeTable",
                                        "dynamodb:ConditionCheckItem"
                                    ],
                                    "Effect": "Allow",
                                    "Resource": [
                                        {
                                            "Fn::Sub": [
                                                "arn:${AWS::Partition}:dynamodb:${AWS::Region}:${AWS::AccountId}:table/${tableName}",
                                                {
                                                    "tableName": {
                                                        "Ref": "DriftConfigTable"
                                                    }
                                                }
                                            ]
                                        },
                                        {
                                            "Fn::Sub": [
                                                "arn:${AWS::Partition}:dynamodb:${AWS::Region}:${AWS::AccountId}:table/${tableName}/index/*",
                                                {
                                                    "tableName": {
                                                        "Ref": "DriftConfigTable"
                                                    }
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    },
                    {
                        "PolicyName": "DriftConfigFunctionRolePolicy1",
                        "PolicyDocument": {
                            "Statement": [
                                {
                                    "Action": [
                                        "dynamodb:GetItem",
                                        "dynamodb:DeleteItem",
                                        "dynamodb:PutItem",
                                        "dynamodb:Scan",
                                        "dynamodb:Query",
                                        "dynamodb:UpdateItem",
                                        "dynamodb:BatchWriteItem",
                                        "dynamodb:BatchGetItem",
                                        "dynamodb:DescribeTable",
                                        "dynamodb:ConditionCheckItem"
                                    ],
                                    "Effect": "Allow",
                                    "Resource": [
                                        {
                                            "Fn::Sub": [
                                                "arn:${AWS::Partition}:dynamodb:${AWS::Region}:${AWS::AccountId}:table/${tableName}",
                                                {
                                                    "tableName": {
                                                        "Ref": "TerraformPlansTable"
                                                    }
                                                }
                                            ]
                                        },
                                        {
                                            "Fn::Sub": [
                                                "arn:${AWS::Partition}:dynamodb:${AWS::Region}:${AWS::AccountId}:table/${tableName}/index/*",
                                                {
                                                    "tableName": {
                                                        "Ref": "TerraformPlansTable"
                                                    }
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    },
                    {
                        "PolicyName": "DriftConfigFunctionRolePolicy2",
                        "PolicyDocument": {
                            "Statement": [
                                {
                                    "Effect": "Allow",
                                    "Action": [
                                        "sns:CreateTopic",
                                        "sns:Subscribe",
                                        "sns:Publish",
                                        "cognito-idp:GetUser"
                                    ],
                                    "Resource": "*"
                                }
                            ]
                        }
                    }
                ],
                "Tags": [
                    {
                        "Key": "lambda:createdBy",
                        "Value": "SAM"
                    },
                    {
                        "Key": "Service",
                        "Value": "cloudops-assistant"
                    },
                    {
                        "Key": "Project",
                        "Value": "CloudOpsAssistant"
                    },
                    {
                        "Key": "Environment",
                        "Value": "prod"
                    },
                    {
                        "Key": "Feature",
                        "Value": "drift-configuration"
                    }
                ]
            }
        },
        "CostAnalyzerFunctionCurrentCostOptionsPermissionProd": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
                "Action": "lambda:InvokeFunction",
                "FunctionName": {
                    "Ref": "CostAnalyzerFunction"
                },
                "Principal": "apigateway.amazonaws.com",
                "SourceArn": {
                    "Fn::Sub": [
                        "arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${__ApiId__}/${__Stage__}/OPTIONS/costs/current",
                        {
                            "__ApiId__": {
                                "Ref": "ServerlessRestApi"
                            },
                            "__Stage__": "*"
                        }
                    ]
                }
            }
        },
        "CostAnalyzerFunctionServiceCostApiPermissionProd": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
                "Action": "lambda:InvokeFunction",
                "FunctionName": {
                    "Ref": "CostAnalyzerFunction"
                },
                "Principal": "apigateway.amazonaws.com",
                "SourceArn": {
                    "Fn::Sub": [
                        "arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${__ApiId__}/${__Stage__}/GET/costs/services",
                        {
                            "__ApiId__": {
                                "Ref": "ServerlessRestApi"
                            },
                            "__Stage__": "*"
                        }
                    ]
                }
            }
        },
        "DriftConfigTable": {
            "Type": "AWS::DynamoDB::Table",
            "Properties": {
                "TableName": "cloudops-assistant-drift-config",
                "BillingMode": "PAY_PER_REQUEST",
                "AttributeDefinitions": [
                    {
                        "AttributeName": "config_id",
                        "AttributeType": "S"
                    },
                    {
                        "AttributeName": "user_id",
                        "AttributeType": "S"
                    }
                ],
                "KeySchema": [
                    {
                        "AttributeName": "config_id",
                        "KeyType": "HASH"
                    }
                ],
                "GlobalSecondaryIndexes": [
                    {
                        "IndexName": "user-id-index",
                        "KeySchema": [
                            {
                                "AttributeName": "user_id",
                                "KeyType": "HASH"
                            }
                        ],
                        "Projection": {
                            "ProjectionType": "ALL"
                        }
                    }
                ],
                "PointInTimeRecoverySpecification": {
                    "PointInTimeRecoveryEnabled": true
                },
                "SSESpecification": {
                    "SSEEnabled": true
                },
                "Tags": [
                    {
                        "Key": "Service",
                        "Value": "cloudops-assistant"
                    },
                    {
                        "Key": "Feature",
                        "Value": "drift-monitoring"
                    }
                ]
            },
            "Metadata": {
                "SamResourceId": "DriftConfigTable"
            }
        },
        "PostmortemGeneratorFunctionPreviousOptionsPermissionProd": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
                "Action": "lambda:InvokeFunction",
                "FunctionName": {
                    "Ref": "PostmortemGeneratorFunction"
                },
                "Principal": "apigateway.amazonaws.com",
                "SourceArn": {
                    "Fn::Sub": [
                        "arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${__ApiId__}/${__Stage__}/OPTIONS/postmortems/previous",
                        {
                            "__ApiId__": {
                                "Ref": "ServerlessRestApi"
                            },
                            "__Stage__": "*"
                        }
                    ]
                }
            }
        },
        "AIExplainerFunction": {
            "Type": "AWS::Lambda::Function",
            "Metadata": {
                "SamResourceId": "AIExplainerFunction"
            },
            "Properties": {
                "Code": {
                    "S3Bucket": "aws-sam-cli-managed-default-samclisourcebucket-bvyo4fudayqr",
                    "S3Key": "cloudops-assistant/4489e2f4581cec3917cdfe256a0f82c7"
                },
                "Handler": "ai_explainer.lambda_handler",
                "MemorySize": 512,
                "Role": {
                    "Fn::GetAtt": [
                        "AIExplainerFunctionRole",
                        "Arn"
                    ]
                },
                "Runtime": "python3.13",
                "Timeout": 60,
                "Environment": {
                    "Variables": {
                        "USER_POOL_ID": {
                            "Ref": "CloudOpsUserPool"
                        },
                        "USER_POOL_CLIENT_ID": {
                            "Ref": "CloudOpsUserPoolClient"
                        }
                    }
                },
                "Tags": [
                    {
                        "Key": "lambda:createdBy",
                        "Value": "SAM"
                    },
                    {
                        "Key": "Service",
                        "Value": "cloudops-assistant"
                    },
                    {
                        "Key": "Project",
                        "Value": "CloudOpsAssistant"
                    },
                    {
                        "Key": "Environment",
                        "Value": "prod"
                    },
                    {
                        "Key": "Feature",
                        "Value": "ai-explainer"
                    }
                ]
            }
        },
        "PostmortemGeneratorFunctionConversationApiPermissionProd": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
                "Action": "lambda:InvokeFunction",
                "FunctionName": {
                    "Ref": "PostmortemGeneratorFunction"
                },
                "Principal": "apigateway.amazonaws.com",
                "SourceArn": {
                    "Fn::Sub": [
                        "arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${__ApiId__}/${__Stage__}/POST/postmortems/conversation",
                        {
                            "__ApiId__": {
                                "Ref": "ServerlessRestApi"
                            },
                            "__Stage__": "*"
                        }
                    ]
                }
            }
        },
        "PlanProcessorFunctionApiOptionsPermissionProd": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
                "Action": "lambda:InvokeFunction",
                "FunctionName": {
                    "Ref": "PlanProcessorFunction"
                },
                "Principal": "apigateway.amazonaws.com",
                "SourceArn": {
                    "Fn::Sub": [
                        "arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${__ApiId__}/${__Stage__}/OPTIONS/upload-plan",
                        {
                            "__ApiId__": {
                                "Ref": "ServerlessRestApi"
                            },
                            "__Stage__": "*"
                        }
                    ]
                }
            }
        },
        "BudgetManagerFunctionRole": {
            "Type": "AWS::IAM::Role",
            "Properties": {
                "AssumeRolePolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                        {
                            "Action": [
                                "sts:AssumeRole"
                            ],
                            "Effect": "Allow",
                            "Principal": {
                                "Service": [
                                    "lambda.amazonaws.com"
                                ]
                            }
                        }
                    ]
                },
                "ManagedPolicyArns": [
                    "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
                ],
                "Policies": [
                    {
                        "PolicyName": "BudgetManagerFunctionRolePolicy0",
                        "PolicyDocument": {
                            "Statement": [
                                {
                                    "Action": [
                                        "dynamodb:GetItem",
                                        "dynamodb:DeleteItem",
                                        "dynamodb:PutItem",
                                        "dynamodb:Scan",
                                        "dynamodb:Query",
                                        "dynamodb:UpdateItem",
                                        "dynamodb:BatchWriteItem",
                                        "dynamodb:BatchGetItem",
                                        "dynamodb:DescribeTable",
                                        "dynamodb:ConditionCheckItem"
                                    ],
                                    "Effect": "Allow",
                                    "Resource": [
                                        {
                                            "Fn::Sub": [
                                                "arn:${AWS::Partition}:dynamodb:${AWS::Region}:${AWS::AccountId}:table/${tableName}",
                                                {
                                                    "tableName": {
                                                        "Ref": "BudgetConfigTable"
                                                    }
                                                }
                                            ]
                                        },
                                        {
                                            "Fn::Sub": [
                                                "arn:${AWS::Partition}:dynamodb:${AWS::Region}:${AWS::AccountId}:table/${tableName}/index/*",
                                                {
                                                    "tableName": {
                                                        "Ref": "BudgetConfigTable"
                                                    }
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    },
                    {
                        "PolicyName": "BudgetManagerFunctionRolePolicy1",
                        "PolicyDocument": {
                            "Statement": [
                                {
                                    "Action": [
                                        "dynamodb:GetItem",
                                        "dynamodb:Scan",
                                        "dynamodb:Query",
                                        "dynamodb:BatchGetItem",
                                        "dynamodb:DescribeTable"
                                    ],
                                    "Effect": "Allow",
                                    "Resource": [
                                        {
                                            "Fn::Sub": [
                                                "arn:${AWS::Partition}:dynamodb:${AWS::Region}:${AWS::AccountId}:table/${tableName}",
                                                {
                                                    "tableName": {
                                                        "Ref": "CostCacheTable"
                                                    }
                                                }
                                            ]
                                        },
                                        {
                                            "Fn::Sub": [
                                                "arn:${AWS::Partition}:dynamodb:${AWS::Region}:${AWS::AccountId}:table/${tableName}/index/*",
                                                {
                                                    "tableName": {
                                                        "Ref": "CostCacheTable"
                                                    }
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    },
                    {
                        "PolicyName": "BudgetManagerFunctionRolePolicy2",
                        "PolicyDocument": {
                            "Statement": [
                                {
                                    "Effect": "Allow",
                                    "Action": [
                                        "ce:GetCostAndUsage",
                                        "sns:Publish",
                                        "cognito-idp:GetUser"
                                    ],
                                    "Resource": "*"
                                }
                            ]
                        }
                    }
                ],
                "Tags": [
                    {
                        "Key": "lambda:createdBy",
                        "Value": "SAM"
                    },
                    {
                        "Key": "Service",
                        "Value": "cloudops-assistant"
                    },
                    {
                        "Key": "Project",
                        "Value": "CloudOpsAssistant"
                    },
                    {
                        "Key": "Environment",
                        "Value": "prod"
                    },
                    {
                        "Key": "Feature",
                        "Value": "budget-management"
                    }
                ]
            }
        },
        "BudgetManagerFunctionConfigureBudgetOptionsPermissionProd": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
                "Action": "lambda:InvokeFunction",
                "FunctionName": {
                    "Ref": "BudgetManagerFunction"
                },
                "Principal": "apigateway.amazonaws.com",
                "SourceArn": {
                    "Fn::Sub": [
                        "arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${__ApiId__}/${__Stage__}/OPTIONS/budgets/configure",
                        {
                            "__ApiId__": {
                                "Ref": "ServerlessRestApi"
                            },
                            "__Stage__": "*"
                        }
                    ]
                }
            }
        },
        "PlanHistoryFunctionPlanDetailsOptionsPermissionProd": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
                "Action": "lambda:InvokeFunction",
                "FunctionName": {
                    "Ref": "PlanHistoryFunction"
                },
                "Principal": "apigateway.amazonaws.com",
                "SourceArn": {
                    "Fn::Sub": [
                        "arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${__ApiId__}/${__Stage__}/OPTIONS/plan-details/*",
                        {
                            "__ApiId__": {
                                "Ref": "ServerlessRestApi"
                            },
                            "__Stage__": "*"
                        }
                    ]
                }
            }
        },
        "PostmortemGeneratorFunctionGetApiPermissionProd": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
                "Action": "lambda:InvokeFunction",
                "FunctionName": {
                    "Ref": "PostmortemGeneratorFunction"
                },
                "Principal": "apigateway.amazonaws.com",
                "SourceArn": {
                    "Fn::Sub": [
                        "arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${__ApiId__}/${__Stage__}/GET/postmortems/*",
                        {
                            "__ApiId__": {
                                "Ref": "ServerlessRestApi"
                            },
                            "__Stage__": "*"
                        }
                    ]
                }
            }
        },
        "PlanHistoryFunctionHistoryApiPermissionProd": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
                "Action": "lambda:InvokeFunction",
                "FunctionName": {
                    "Ref": "PlanHistoryFunction"
                },
                "Principal": "apigateway.amazonaws.com",
                "SourceArn": {
                    "Fn::Sub": [
                        "arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${__ApiId__}/${__Stage__}/GET/plan-history/*",
                        {
                            "__ApiId__": {
                                "Ref": "ServerlessRestApi"
                            },
                            "__Stage__": "*"
                        }
                    ]
                }
            }
        },
        "DriftConfigFunctionUpdateApiPermissionProd": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
                "Action": "lambda:InvokeFunction",
                "FunctionName": {
                    "Ref": "DriftConfigFunction"
                },
                "Principal": "apigateway.amazonaws.com",
                "SourceArn": {
                    "Fn::Sub": [
                        "arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${__ApiId__}/${__Stage__}/PUT/drift/update/*",
                        {
                            "__ApiId__": {
                                "Ref": "ServerlessRestApi"
                            },
                            "__Stage__": "*"
                        }
                    ]
                }
            }
        },
        "DriftSchedulerFunction": {
            "Type": "AWS::Lambda::Function",
            "Metadata": {
                "SamResourceId": "DriftSchedulerFunction"
            },
            "Properties": {
                "Code": {
                    "S3Bucket": "aws-sam-cli-managed-default-samclisourcebucket-bvyo4fudayqr",
                    "S3Key": "cloudops-assistant/4489e2f4581cec3917cdfe256a0f82c7"
                },
                "Handler": "drift_scheduler.lambda_handler",
                "MemorySize": 1024,
                "Role": {
                    "Fn::GetAtt": [
                        "DriftSchedulerFunctionRole",
                        "Arn"
                    ]
                },
                "Runtime": "python3.13",
                "Timeout": 900,
                "Environment": {
                    "Variables": {
                        "USER_POOL_ID": {
                            "Ref": "CloudOpsUserPool"
                        },
                        "USER_POOL_CLIENT_ID": {
                            "Ref": "CloudOpsUserPoolClient"
                        }
                    }
                },
                "Tags": [
                    {
                        "Key": "lambda:createdBy",
                        "Value": "SAM"
                    },
                    {
                        "Key": "Service",
                        "Value": "cloudops-assistant"
                    },
                    {
                        "Key": "Project",
                        "Value": "CloudOpsAssistant"
                    },
                    {
                        "Key": "Environment",
                        "Value": "prod"
                    },
                    {
                        "Key": "Feature",
                        "Value": "drift-monitoring"
                    }
                ],
                "Layers": [
                    "arn:aws:lambda:us-east-1:553035198032:layer:git-lambda2:8"
                ]
            }
        },
        "CostAnalyzerFunctionTrendsCostOptionsPermissionProd": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
                "Action": "lambda:InvokeFunction",
                "FunctionName": {
                    "Ref": "CostAnalyzerFunction"
                },
                "Principal": "apigateway.amazonaws.com",
                "SourceArn": {
                    "Fn::Sub": [
                        "arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${__ApiId__}/${__Stage__}/OPTIONS/costs/trends",
                        {
                            "__ApiId__": {
                                "Ref": "ServerlessRestApi"
                            },
                            "__Stage__": "*"
                        }
                    ]
                }
            }
        },
        "DriftSchedulerFunctionRole": {
            "Type": "AWS::IAM::Role",
            "Properties": {
                "AssumeRolePolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                        {
                            "Action": [
                                "sts:AssumeRole"
                            ],
                            "Effect": "Allow",
                            "Principal": {
                                "Service": [
                                    "lambda.amazonaws.com"
                                ]
                            }
                        }
                    ]
                },
                "ManagedPolicyArns": [
                    "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
                ],
                "Policies": [
                    {
                        "PolicyName": "DriftSchedulerFunctionRolePolicy0",
                        "PolicyDocument": {
                            "Statement": [
                                {
                                    "Action": [
                                        "dynamodb:GetItem",
                                        "dynamodb:DeleteItem",
                                        "dynamodb:PutItem",
                                        "dynamodb:Scan",
                                        "dynamodb:Query",
                                        "dynamodb:UpdateItem",
                                        "dynamodb:BatchWriteItem",
                                        "dynamodb:BatchGetItem",
                                        "dynamodb:DescribeTable",
                                        "dynamodb:ConditionCheckItem"
                                    ],
                                    "Effect": "Allow",
                                    "Resource": [
                                        {
                                            "Fn::Sub": [
                                                "arn:${AWS::Partition}:dynamodb:${AWS::Region}:${AWS::AccountId}:table/${tableName}",
                                                {
                                                    "tableName": {
                                                        "Ref": "DriftConfigTable"
                                                    }
                                                }
                                            ]
                                        },
                                        {
                                            "Fn::Sub": [
                                                "arn:${AWS::Partition}:dynamodb:${AWS::Region}:${AWS::AccountId}:table/${tableName}/index/*",
                                                {
                                                    "tableName": {
                                                        "Ref": "DriftConfigTable"
                                                    }
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    },
                    {
                        "PolicyName": "DriftSchedulerFunctionRolePolicy1",
                        "PolicyDocument": {
                            "Statement": [
                                {
                                    "Action": [
                                        "dynamodb:GetItem",
                                        "dynamodb:DeleteItem",
                                        "dynamodb:PutItem",
                                        "dynamodb:Scan",
                                        "dynamodb:Query",
                                        "dynamodb:UpdateItem",
                                        "dynamodb:BatchWriteItem",
                                        "dynamodb:BatchGetItem",
                                        "dynamodb:DescribeTable",
                                        "dynamodb:ConditionCheckItem"
                                    ],
                                    "Effect": "Allow",
                                    "Resource": [
                                        {
                                            "Fn::Sub": [
                                                "arn:${AWS::Partition}:dynamodb:${AWS::Region}:${AWS::AccountId}:table/${tableName}",
                                                {
                                                    "tableName": {
                                                        "Ref": "TerraformPlansTable"
                                                    }
                                                }
                                            ]
                                        },
                                        {
                                            "Fn::Sub": [
                                                "arn:${AWS::Partition}:dynamodb:${AWS::Region}:${AWS::AccountId}:table/${tableName}/index/*",
                                                {
                                                    "tableName": {
                                                        "Ref": "TerraformPlansTable"
                                                    }
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    },
                    {
                        "PolicyName": "DriftSchedulerFunctionRolePolicy2",
                        "PolicyDocument": {
                            "Statement": [
                                {
                                    "Effect": "Allow",
                                    "Action": [
                                        "sns:CreateTopic",
                                        "sns:Subscribe",
                                        "sns:Publish"
                                    ],
                                    "Resource": "*"
                                }
                            ]
                        }
                    }
                ],
                "Tags": [
                    {
                        "Key": "lambda:createdBy",
                        "Value": "SAM"
                    },
                    {
                        "Key": "Service",
                        "Value": "cloudops-assistant"
                    },
                    {
                        "Key": "Project",
                        "Value": "CloudOpsAssistant"
                    },
                    {
                        "Key": "Environment",
                        "Value": "prod"
                    },
                    {
                        "Key": "Feature",
                        "Value": "drift-monitoring"
                    }
                ]
            }
        },
        "DriftSchedulerFunctionScheduleHourly": {
            "Type": "AWS::Events::Rule",
            "Properties": {
                "Description": "Hourly drift monitoring check (respects per-repo schedules)",
                "ScheduleExpression": "rate(1 hour)",
                "Targets": [
                    {
                        "Arn": {
                            "Fn::GetAtt": [
                                "DriftSchedulerFunction",
                                "Arn"
                            ]
                        },
                        "Id": "DriftSchedulerFunctionScheduleHourlyLambdaTarget"
                    }
                ]
            }
        },
        "BudgetManagerFunctionDeleteBudgetApiPermissionProd": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
                "Action": "lambda:InvokeFunction",
                "FunctionName": {
                    "Ref": "BudgetManagerFunction"
                },
                "Principal": "apigateway.amazonaws.com",
                "SourceArn": {
                    "Fn::Sub": [
                        "arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${__ApiId__}/${__Stage__}/DELETE/budgets/delete/*",
                        {
                            "__ApiId__": {
                                "Ref": "ServerlessRestApi"
                            },
                            "__Stage__": "*"
                        }
                    ]
                }
            }
        },
        "ServerlessRestApiProdStage": {
            "Type": "AWS::ApiGateway::Stage",
            "Properties": {
                "DeploymentId": {
                    "Ref": "ServerlessRestApiDeployment4044e49a87"
                },
                "RestApiId": {
                    "Ref": "ServerlessRestApi"
                },
                "StageName": "Prod"
            }
        },
        "PostmortemGeneratorFunctionCreateApiPermissionProd": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
                "Action": "lambda:InvokeFunction",
                "FunctionName": {
                    "Ref": "PostmortemGeneratorFunction"
                },
                "Principal": "apigateway.amazonaws.com",
                "SourceArn": {
                    "Fn::Sub": [
                        "arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${__ApiId__}/${__Stage__}/POST/postmortems",
                        {
                            "__ApiId__": {
                                "Ref": "ServerlessRestApi"
                            },
                            "__Stage__": "*"
                        }
                    ]
                }
            }
        },
        "PlanProcessorFunctionApiPermissionProd": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
                "Action": "lambda:InvokeFunction",
                "FunctionName": {
                    "Ref": "PlanProcessorFunction"
                },
                "Principal": "apigateway.amazonaws.com",
                "SourceArn": {
                    "Fn::Sub": [
                        "arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${__ApiId__}/${__Stage__}/POST/upload-plan",
                        {
                            "__ApiId__": {
                                "Ref": "ServerlessRestApi"
                            },
                            "__Stage__": "*"
                        }
                    ]
                }
            }
        },
        "DriftConfigFunctionDeleteApiPermissionProd": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
                "Action": "lambda:InvokeFunction",
                "FunctionName": {
                    "Ref": "DriftConfigFunction"
                },
                "Principal": "apigateway.amazonaws.com",
                "SourceArn": {
                    "Fn::Sub": [
                        "arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${__ApiId__}/${__Stage__}/DELETE/drift/delete/*",
                        {
                            "__ApiId__": {
                                "Ref": "ServerlessRestApi"
                            },
                            "__Stage__": "*"
                        }
                    ]
                }
            }
        },
        "DriftConfigFunctionStatusOptionsPermissionProd": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
                "Action": "lambda:InvokeFunction",
                "FunctionName": {
                    "Ref": "DriftConfigFunction"
                },
                "Principal": "apigateway.amazonaws.com",
                "SourceArn": {
                    "Fn::Sub": [
                        "arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${__ApiId__}/${__Stage__}/OPTIONS/drift/status",
                        {
                            "__ApiId__": {
                                "Ref": "ServerlessRestApi"
                            },
                            "__Stage__": "*"
                        }
                    ]
                }
            }
        },
        "BudgetConfigTable": {
            "Type": "AWS::DynamoDB::Table",
            "Properties": {
                "TableName": "cloudops-assistant-budget-config",
                "BillingMode": "PAY_PER_REQUEST",
                "AttributeDefinitions": [
                    {
                        "AttributeName": "budget_id",
                        "AttributeType": "S"
                    }
                ],
                "KeySchema": [
                    {
                        "AttributeName": "budget_id",
                        "KeyType": "HASH"
                    }
                ],
                "TimeToLiveSpecification": {
                    "AttributeName": "ttl",
                    "Enabled": true
                },
                "PointInTimeRecoverySpecification": {
                    "PointInTimeRecoveryEnabled": true
                },
                "SSESpecification": {
                    "SSEEnabled": true
                },
                "Tags": [
                    {
                        "Key": "Service",
                        "Value": "cloudops-assistant"
                    },
                    {
                        "Key": "Feature",
                        "Value": "budget-management"
                    }
                ]
            },
            "Metadata": {
                "SamResourceId": "BudgetConfigTable"
            }
        },
        "CostAnalyzerFunctionTagCostApiPermissionProd": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
                "Action": "lambda:InvokeFunction",
                "FunctionName": {
                    "Ref": "CostAnalyzerFunction"
                },
                "Principal": "apigateway.amazonaws.com",
                "SourceArn": {
                    "Fn::Sub": [
                        "arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${__ApiId__}/${__Stage__}/GET/costs/by-tag",
                        {
                            "__ApiId__": {
                                "Ref": "ServerlessRestApi"
                            },
                            "__Stage__": "*"
                        }
                    ]
                }
            }
        },
        "DriftConfigFunction": {
            "Type": "AWS::Lambda::Function",
            "Metadata": {
                "SamResourceId": "DriftConfigFunction"
            },
            "Properties": {
                "Code": {
                    "S3Bucket": "aws-sam-cli-managed-default-samclisourcebucket-bvyo4fudayqr",
                    "S3Key": "cloudops-assistant/4489e2f4581cec3917cdfe256a0f82c7"
                },
                "Handler": "drift_config.lambda_handler",
                "MemorySize": 1024,
                "Role": {
                    "Fn::GetAtt": [
                        "DriftConfigFunctionRole",
                        "Arn"
                    ]
                },
                "Runtime": "python3.13",
                "Timeout": 600,
                "Environment": {
                    "Variables": {
                        "USER_POOL_ID": {
                            "Ref": "CloudOpsUserPool"
                        },
                        "USER_POOL_CLIENT_ID": {
                            "Ref": "CloudOpsUserPoolClient"
                        }
                    }
                },
                "Tags": [
                    {
                        "Key": "lambda:createdBy",
                        "Value": "SAM"
                    },
                    {
                        "Key": "Service",
                        "Value": "cloudops-assistant"
                    },
                    {
                        "Key": "Project",
                        "Value": "CloudOpsAssistant"
                    },
                    {
                        "Key": "Environment",
                        "Value": "prod"
                    },
                    {
                        "Key": "Feature",
                        "Value": "drift-configuration"
                    }
                ],
                "Layers": [
                    "arn:aws:lambda:us-east-1:553035198032:layer:git-lambda2:8"
                ]
            }
        },
        "BudgetManagerFunctionBudgetStatusApiPermissionProd": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
                "Action": "lambda:InvokeFunction",
                "FunctionName": {
                    "Ref": "BudgetManagerFunction"
                },
                "Principal": "apigateway.amazonaws.com",
                "SourceArn": {
                    "Fn::Sub": [
                        "arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${__ApiId__}/${__Stage__}/GET/budgets/status",
                        {
                            "__ApiId__": {
                                "Ref": "ServerlessRestApi"
                            },
                            "__Stage__": "*"
                        }
                    ]
                }
            }
        },
        "RepoScannerFunctionRole": {
            "Type": "AWS::IAM::Role",
            "Properties": {
                "AssumeRolePolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                        {
                            "Action": [
                                "sts:AssumeRole"
                            ],
                            "Effect": "Allow",
                            "Principal": {
                                "Service": [
                                    "lambda.amazonaws.com"
                                ]
                            }
                        }
                    ]
                },
                "ManagedPolicyArns": [
                    "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
                ],
                "Policies": [
                    {
                        "PolicyName": "RepoScannerFunctionRolePolicy0",
                        "PolicyDocument": {
                            "Statement": [
                                {
                                    "Effect": "Allow",
                                    "Action": [
                                        "cognito-idp:GetUser"
                                    ],
                                    "Resource": {
                                        "Fn::GetAtt": [
                                            "CloudOpsUserPool",
                                            "Arn"
                                        ]
                                    }
                                }
                            ]
                        }
                    }
                ],
                "Tags": [
                    {
                        "Key": "lambda:createdBy",
                        "Value": "SAM"
                    },
                    {
                        "Key": "Service",
                        "Value": "cloudops-assistant"
                    },
                    {
                        "Key": "Project",
                        "Value": "CloudOpsAssistant"
                    },
                    {
                        "Key": "Environment",
                        "Value": "prod"
                    },
                    {
                        "Key": "Feature",
                        "Value": "repo-scanning"
                    }
                ]
            }
        },
        "DriftSchedulerFunctionScheduleHourlyPermission": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
                "Action": "lambda:InvokeFunction",
                "FunctionName": {
                    "Ref": "DriftSchedulerFunction"
                },
                "Principal": "events.amazonaws.com",
                "SourceArn": {
                    "Fn::GetAtt": [
                        "DriftSchedulerFunctionScheduleHourly",
                        "Arn"
                    ]
                }
            }
        },
        "AuthHandlerFunction": {
            "Type": "AWS::Lambda::Function",
            "Metadata": {
                "SamResourceId": "AuthHandlerFunction"
            },
            "Properties": {
                "Code": {
                    "S3Bucket": "aws-sam-cli-managed-default-samclisourcebucket-bvyo4fudayqr",
                    "S3Key": "cloudops-assistant/4489e2f4581cec3917cdfe256a0f82c7"
                },
                "Handler": "auth_handler.lambda_handler",
                "MemorySize": 256,
                "Role": {
                    "Fn::GetAtt": [
                        "AuthHandlerFunctionRole",
                        "Arn"
                    ]
                },
                "Runtime": "python3.13",
                "Timeout": 30,
                "Environment": {
                    "Variables": {
                        "USER_POOL_ID": {
                            "Ref": "CloudOpsUserPool"
                        },
                        "USER_POOL_CLIENT_ID": {
                            "Ref": "CloudOpsUserPoolClient"
                        }
                    }
                },
                "Tags": [
                    {
                        "Key": "lambda:createdBy",
                        "Value": "SAM"
                    },
                    {
                        "Key": "Service",
                        "Value": "cloudops-assistant"
                    },
                    {
                        "Key": "Project",
                        "Value": "CloudOpsAssistant"
                    },
                    {
                        "Key": "Environment",
                        "Value": "prod"
                    },
                    {
                        "Key": "Feature",
                        "Value": "authentication"
                    }
                ]
            }
        },
        "PostmortemGeneratorFunctionSuggestApiPermissionProd": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
                "Action": "lambda:InvokeFunction",
                "FunctionName": {
                    "Ref": "PostmortemGeneratorFunction"
                },
                "Principal": "apigateway.amazonaws.com",
                "SourceArn": {
                    "Fn::Sub": [
                        "arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${__ApiId__}/${__Stage__}/POST/postmortems/suggest",
                        {
                            "__ApiId__": {
                                "Ref": "ServerlessRestApi"
                            },
                            "__Stage__": "*"
                        }
                    ]
                }
            }
        },
        "PlanHistoryFunction": {
            "Type": "AWS::Lambda::Function",
            "Metadata": {
                "SamResourceId": "PlanHistoryFunction"
            },
            "Properties": {
                "Code": {
                    "S3Bucket": "aws-sam-cli-managed-default-samclisourcebucket-bvyo4fudayqr",
                    "S3Key": "cloudops-assistant/4489e2f4581cec3917cdfe256a0f82c7"
                },
                "Handler": "plan_history.lambda_handler",
                "MemorySize": 256,
                "Role": {
                    "Fn::GetAtt": [
                        "PlanHistoryFunctionRole",
                        "Arn"
                    ]
                },
                "Runtime": "python3.13",
                "Timeout": 30,
                "Environment": {
                    "Variables": {
                        "USER_POOL_ID": {
                            "Ref": "CloudOpsUserPool"
                        },
                        "USER_POOL_CLIENT_ID": {
                            "Ref": "CloudOpsUserPoolClient"
                        }
                    }
                },
                "Tags": [
                    {
                        "Key": "lambda:createdBy",
                        "Value": "SAM"
                    },
                    {
                        "Key": "Service",
                        "Value": "cloudops-assistant"
                    },
                    {
                        "Key": "Project",
                        "Value": "CloudOpsAssistant"
                    },
                    {
                        "Key": "Environment",
                        "Value": "prod"
                    },
                    {
                        "Key": "Feature",
                        "Value": "plan-history"
                    }
                ]
            }
        },
        "CostCacheTable": {
            "Type": "AWS::DynamoDB::Table",
            "Properties": {
                "TableName": "cloudops-assistant-cost-cache",
                "BillingMode": "PAY_PER_REQUEST",
                "AttributeDefinitions": [
                    {
                        "AttributeName": "cache_key",
                        "AttributeType": "S"
                    }
                ],
                "KeySchema": [
                    {
                        "AttributeName": "cache_key",
                        "KeyType": "HASH"
                    }
                ],
                "TimeToLiveSpecification": {
                    "AttributeName": "ttl",
                    "Enabled": true
                },
                "PointInTimeRecoverySpecification": {
                    "PointInTimeRecoveryEnabled": true
                },
                "SSESpecification": {
                    "SSEEnabled": true
                },
                "Tags": [
                    {
                        "Key": "Service",
                        "Value": "cloudops-assistant"
                    },
                    {
                        "Key": "Feature",
                        "Value": "cost-analysis"
                    }
                ]
            },
            "Metadata": {
                "SamResourceId": "CostCacheTable"
            }
        },
        "DriftConfigFunctionConfigureApiPermissionProd": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
                "Action": "lambda:InvokeFunction",
                "FunctionName": {
                    "Ref": "DriftConfigFunction"
                },
                "Principal": "apigateway.amazonaws.com",
                "SourceArn": {
                    "Fn::Sub": [
                        "arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${__ApiId__}/${__Stage__}/POST/drift/configure",
                        {
                            "__ApiId__": {
                                "Ref": "ServerlessRestApi"
                            },
                            "__Stage__": "*"
                        }
                    ]
                }
            }
        },
        "PostmortemGeneratorFunctionRole": {
            "Type": "AWS::IAM::Role",
            "Properties": {
                "AssumeRolePolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                        {
                            "Action": [
                                "sts:AssumeRole"
                            ],
                            "Effect": "Allow",
                            "Principal": {
                                "Service": [
                                    "lambda.amazonaws.com"
                                ]
                            }
                        }
                    ]
                },
                "ManagedPolicyArns": [
                    "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
                ],
                "Policies": [
                    {
                        "PolicyName": "PostmortemGeneratorFunctionRolePolicy0",
                        "PolicyDocument": {
                            "Statement": [
                                {
                                    "Action": [
                                        "dynamodb:GetItem",
                                        "dynamodb:DeleteItem",
                                        "dynamodb:PutItem",
                                        "dynamodb:Scan",
                                        "dynamodb:Query",
                                        "dynamodb:UpdateItem",
                                        "dynamodb:BatchWriteItem",
                                        "dynamodb:BatchGetItem",
                                        "dynamodb:DescribeTable",
                                        "dynamodb:ConditionCheckItem"
                                    ],
                                    "Effect": "Allow",
                                    "Resource": [
                                        {
                                            "Fn::Sub": [
                                                "arn:${AWS::Partition}:dynamodb:${AWS::Region}:${AWS::AccountId}:table/${tableName}",
                                                {
                                                    "tableName": {
                                                        "Ref": "TerraformPlansTable"
                                                    }
                                                }
                                            ]
                                        },
                                        {
                                            "Fn::Sub": [
                                                "arn:${AWS::Partition}:dynamodb:${AWS::Region}:${AWS::AccountId}:table/${tableName}/index/*",
                                                {
                                                    "tableName": {
                                                        "Ref": "TerraformPlansTable"
                                                    }
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    },
                    {
                        "PolicyName": "PostmortemGeneratorFunctionRolePolicy1",
                        "PolicyDocument": {
                            "Statement": [
                                {
                                    "Action": [
                                        "dynamodb:GetItem",
                                        "dynamodb:DeleteItem",
                                        "dynamodb:PutItem",
                                        "dynamodb:Scan",
                                        "dynamodb:Query",
                                        "dynamodb:UpdateItem",
                                        "dynamodb:BatchWriteItem",
                                        "dynamodb:BatchGetItem",
                                        "dynamodb:DescribeTable",
                                        "dynamodb:ConditionCheckItem"
                                    ],
                                    "Effect": "Allow",
                                    "Resource": [
                                        {
                                            "Fn::Sub": [
                                                "arn:${AWS::Partition}:dynamodb:${AWS::Region}:${AWS::AccountId}:table/${tableName}",
                                                {
                                                    "tableName": {
                                                        "Ref": "PostmortemsTable"
                                                    }
                                                }
                                            ]
                                        },
                                        {
                                            "Fn::Sub": [
                                                "arn:${AWS::Partition}:dynamodb:${AWS::Region}:${AWS::AccountId}:table/${tableName}/index/*",
                                                {
                                                    "tableName": {
                                                        "Ref": "PostmortemsTable"
                                                    }
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    },
                    {
                        "PolicyName": "PostmortemGeneratorFunctionRolePolicy2",
                        "PolicyDocument": {
                            "Statement": [
                                {
                                    "Effect": "Allow",
                                    "Action": [
                                        "cognito-idp:GetUser",
                                        "cognito-idp:ListUsers",
                                        "ce:GetCostAndUsage",
                                        "bedrock:InvokeModel",
                                        "bedrock:InvokeModelWithResponseStream"
                                    ],
                                    "Resource": "*"
                                }
                            ]
                        }
                    }
                ],
                "Tags": [
                    {
                        "Key": "lambda:createdBy",
                        "Value": "SAM"
                    },
                    {
                        "Key": "Service",
                        "Value": "cloudops-assistant"
                    },
                    {
                        "Key": "Project",
                        "Value": "CloudOpsAssistant"
                    },
                    {
                        "Key": "Environment",
                        "Value": "prod"
                    },
                    {
                        "Key": "Feature",
                        "Value": "postmortem-generator"
                    }
                ]
            }
        },
        "AIExplainerFunctionExplanationsApiPermissionProd": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
                "Action": "lambda:InvokeFunction",
                "FunctionName": {
                    "Ref": "AIExplainerFunction"
                },
                "Principal": "apigateway.amazonaws.com",
                "SourceArn": {
                    "Fn::Sub": [
                        "arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${__ApiId__}/${__Stage__}/GET/ai/explanations",
                        {
                            "__ApiId__": {
                                "Ref": "ServerlessRestApi"
                            },
                            "__Stage__": "*"
                        }
                    ]
                }
            }
        },
        "AuthHandlerFunctionRole": {
            "Type": "AWS::IAM::Role",
            "Properties": {
                "AssumeRolePolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                        {
                            "Action": [
                                "sts:AssumeRole"
                            ],
                            "Effect": "Allow",
                            "Principal": {
                                "Service": [
                                    "lambda.amazonaws.com"
                                ]
                            }
                        }
                    ]
                },
                "ManagedPolicyArns": [
                    "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
                ],
                "Policies": [
                    {
                        "PolicyName": "AuthHandlerFunctionRolePolicy0",
                        "PolicyDocument": {
                            "Statement": [
                                {
                                    "Effect": "Allow",
                                    "Action": [
                                        "cognito-idp:AdminCreateUser",
                                        "cognito-idp:AdminSetUserPassword",
                                        "cognito-idp:AdminInitiateAuth",
                                        "cognito-idp:GetUser"
                                    ],
                                    "Resource": {
                                        "Fn::GetAtt": [
                                            "CloudOpsUserPool",
                                            "Arn"
                                        ]
                                    }
                                }
                            ]
                        }
                    }
                ],
                "Tags": [
                    {
                        "Key": "lambda:createdBy",
                        "Value": "SAM"
                    },
                    {
                        "Key": "Service",
                        "Value": "cloudops-assistant"
                    },
                    {
                        "Key": "Project",
                        "Value": "CloudOpsAssistant"
                    },
                    {
                        "Key": "Environment",
                        "Value": "prod"
                    },
                    {
                        "Key": "Feature",
                        "Value": "authentication"
                    }
                ]
            }
        },
        "CostAnalyzerFunctionServiceCostOptionsPermissionProd": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
                "Action": "lambda:InvokeFunction",
                "FunctionName": {
                    "Ref": "CostAnalyzerFunction"
                },
                "Principal": "apigateway.amazonaws.com",
                "SourceArn": {
                    "Fn::Sub": [
                        "arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${__ApiId__}/${__Stage__}/OPTIONS/costs/services",
                        {
                            "__ApiId__": {
                                "Ref": "ServerlessRestApi"
                            },
                            "__Stage__": "*"
                        }
                    ]
                }
            }
        },
        "PlanHistoryFunctionPlanDetailsApiPermissionProd": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
                "Action": "lambda:InvokeFunction",
                "FunctionName": {
                    "Ref": "PlanHistoryFunction"
                },
                "Principal": "apigateway.amazonaws.com",
                "SourceArn": {
                    "Fn::Sub": [
                        "arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${__ApiId__}/${__Stage__}/GET/plan-details/*",
                        {
                            "__ApiId__": {
                                "Ref": "ServerlessRestApi"
                            },
                            "__Stage__": "*"
                        }
                    ]
                }
            }
        },
        "PostmortemGeneratorFunctionUpdateApiPermissionProd": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
                "Action": "lambda:InvokeFunction",
                "FunctionName": {
                    "Ref": "PostmortemGeneratorFunction"
                },
                "Principal": "apigateway.amazonaws.com",
                "SourceArn": {
                    "Fn::Sub": [
                        "arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${__ApiId__}/${__Stage__}/PUT/postmortems/*",
                        {
                            "__ApiId__": {
                                "Ref": "ServerlessRestApi"
                            },
                            "__Stage__": "*"
                        }
                    ]
                }
            }
        },
        "PostmortemGeneratorFunctionPostmortemsOptionsPermissionProd": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
                "Action": "lambda:InvokeFunction",
                "FunctionName": {
                    "Ref": "PostmortemGeneratorFunction"
                },
                "Principal": "apigateway.amazonaws.com",
                "SourceArn": {
                    "Fn::Sub": [
                        "arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${__ApiId__}/${__Stage__}/OPTIONS/postmortems",
                        {
                            "__ApiId__": {
                                "Ref": "ServerlessRestApi"
                            },
                            "__Stage__": "*"
                        }
                    ]
                }
            }
        },
        "RepoScannerFunctionApiPermissionProd": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
                "Action": "lambda:InvokeFunction",
                "FunctionName": {
                    "Ref": "RepoScannerFunction"
                },
                "Principal": "apigateway.amazonaws.com",
                "SourceArn": {
                    "Fn::Sub": [
                        "arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${__ApiId__}/${__Stage__}/POST/scan-repos",
                        {
                            "__ApiId__": {
                                "Ref": "ServerlessRestApi"
                            },
                            "__Stage__": "*"
                        }
                    ]
                }
            }
        },
        "AuthHandlerFunctionRegisterOptionsPermissionProd": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
                "Action": "lambda:InvokeFunction",
                "FunctionName": {
                    "Ref": "AuthHandlerFunction"
                },
                "Principal": "apigateway.amazonaws.com",
                "SourceArn": {
                    "Fn::Sub": [
                        "arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${__ApiId__}/${__Stage__}/OPTIONS/auth/register",
                        {
                            "__ApiId__": {
                                "Ref": "ServerlessRestApi"
                            },
                            "__Stage__": "*"
                        }
                    ]
                }
            }
        },
        "PostmortemGeneratorFunctionPostmortemIdOptionsPermissionProd": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
                "Action": "lambda:InvokeFunction",
                "FunctionName": {
                    "Ref": "PostmortemGeneratorFunction"
                },
                "Principal": "apigateway.amazonaws.com",
                "SourceArn": {
                    "Fn::Sub": [
                        "arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${__ApiId__}/${__Stage__}/OPTIONS/postmortems/*",
                        {
                            "__ApiId__": {
                                "Ref": "ServerlessRestApi"
                            },
                            "__Stage__": "*"
                        }
                    ]
                }
            }
        },
        "BudgetManagerFunction": {
            "Type": "AWS::Lambda::Function",
            "Metadata": {
                "SamResourceId": "BudgetManagerFunction"
            },
            "Properties": {
                "Code": {
                    "S3Bucket": "aws-sam-cli-managed-default-samclisourcebucket-bvyo4fudayqr",
                    "S3Key": "cloudops-assistant/4489e2f4581cec3917cdfe256a0f82c7"
                },
                "Handler": "budget_manager.lambda_handler",
                "MemorySize": 256,
                "Role": {
                    "Fn::GetAtt": [
                        "BudgetManagerFunctionRole",
                        "Arn"
                    ]
                },
                "Runtime": "python3.13",
                "Timeout": 30,
                "Environment": {
                    "Variables": {
                        "USER_POOL_ID": {
                            "Ref": "CloudOpsUserPool"
                        },
                        "USER_POOL_CLIENT_ID": {
                            "Ref": "CloudOpsUserPoolClient"
                        }
                    }
                },
                "Tags": [
                    {
                        "Key": "lambda:createdBy",
                        "Value": "SAM"
                    },
                    {
                        "Key": "Service",
                        "Value": "cloudops-assistant"
                    },
                    {
                        "Key": "Project",
                        "Value": "CloudOpsAssistant"
                    },
                    {
                        "Key": "Environment",
                        "Value": "prod"
                    },
                    {
                        "Key": "Feature",
                        "Value": "budget-management"
                    }
                ]
            }
        },
        "AuthHandlerFunctionRegisterApiPermissionProd": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
                "Action": "lambda:InvokeFunction",
                "FunctionName": {
                    "Ref": "AuthHandlerFunction"
                },
                "Principal": "apigateway.amazonaws.com",
                "SourceArn": {
                    "Fn::Sub": [
                        "arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${__ApiId__}/${__Stage__}/POST/auth/register",
                        {
                            "__ApiId__": {
                                "Ref": "ServerlessRestApi"
                            },
                            "__Stage__": "*"
                        }
                    ]
                }
            }
        },
        "AuthHandlerFunctionVerifyApiPermissionProd": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
                "Action": "lambda:InvokeFunction",
                "FunctionName": {
                    "Ref": "AuthHandlerFunction"
                },
                "Principal": "apigateway.amazonaws.com",
                "SourceArn": {
                    "Fn::Sub": [
                        "arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${__ApiId__}/${__Stage__}/POST/auth/verify",
                        {
                            "__ApiId__": {
                                "Ref": "ServerlessRestApi"
                            },
                            "__Stage__": "*"
                        }
                    ]
                }
            }
        },
        "DriftConfigFunctionManualScanOptionsPermissionProd": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
                "Action": "lambda:InvokeFunction",
                "FunctionName": {
                    "Ref": "DriftConfigFunction"
                },
                "Principal": "apigateway.amazonaws.com",
                "SourceArn": {
                    "Fn::Sub": [
                        "arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${__ApiId__}/${__Stage__}/OPTIONS/drift/scan/*",
                        {
                            "__ApiId__": {
                                "Ref": "ServerlessRestApi"
                            },
                            "__Stage__": "*"
                        }
                    ]
                }
            }
        },
        "CostAnalyzerFunctionTrendsCostApiPermissionProd": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
                "Action": "lambda:InvokeFunction",
                "FunctionName": {
                    "Ref": "CostAnalyzerFunction"
                },
                "Principal": "apigateway.amazonaws.com",
                "SourceArn": {
                    "Fn::Sub": [
                        "arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${__ApiId__}/${__Stage__}/GET/costs/trends",
                        {
                            "__ApiId__": {
                                "Ref": "ServerlessRestApi"
                            },
                            "__Stage__": "*"
                        }
                    ]
                }
            }
        },
        "PlanHistoryFunctionRole": {
            "Type": "AWS::IAM::Role",
            "Properties": {
                "AssumeRolePolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                        {
                            "Action": [
                                "sts:AssumeRole"
                            ],
                            "Effect": "Allow",
                            "Principal": {
                                "Service": [
                                    "lambda.amazonaws.com"
                                ]
                            }
                        }
                    ]
                },
                "ManagedPolicyArns": [
                    "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
                ],
                "Policies": [
                    {
                        "PolicyName": "PlanHistoryFunctionRolePolicy0",
                        "PolicyDocument": {
                            "Statement": [
                                {
                                    "Action": [
                                        "dynamodb:GetItem",
                                        "dynamodb:Scan",
                                        "dynamodb:Query",
                                        "dynamodb:BatchGetItem",
                                        "dynamodb:DescribeTable"
                                    ],
                                    "Effect": "Allow",
                                    "Resource": [
                                        {
                                            "Fn::Sub": [
                                                "arn:${AWS::Partition}:dynamodb:${AWS::Region}:${AWS::AccountId}:table/${tableName}",
                                                {
                                                    "tableName": {
                                                        "Ref": "TerraformPlansTable"
                                                    }
                                                }
                                            ]
                                        },
                                        {
                                            "Fn::Sub": [
                                                "arn:${AWS::Partition}:dynamodb:${AWS::Region}:${AWS::AccountId}:table/${tableName}/index/*",
                                                {
                                                    "tableName": {
                                                        "Ref": "TerraformPlansTable"
                                                    }
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    },
                    {
                        "PolicyName": "PlanHistoryFunctionRolePolicy1",
                        "PolicyDocument": {
                            "Statement": [
                                {
                                    "Effect": "Allow",
                                    "Action": [
                                        "cognito-idp:GetUser"
                                    ],
                                    "Resource": {
                                        "Fn::GetAtt": [
                                            "CloudOpsUserPool",
                                            "Arn"
                                        ]
                                    }
                                }
                            ]
                        }
                    }
                ],
                "Tags": [
                    {
                        "Key": "lambda:createdBy",
                        "Value": "SAM"
                    },
                    {
                        "Key": "Service",
                        "Value": "cloudops-assistant"
                    },
                    {
                        "Key": "Project",
                        "Value": "CloudOpsAssistant"
                    },
                    {
                        "Key": "Environment",
                        "Value": "prod"
                    },
                    {
                        "Key": "Feature",
                        "Value": "plan-history"
                    }
                ]
            }
        },
        "AIExplainerFunctionExplanationsOptionsPermissionProd": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
                "Action": "lambda:InvokeFunction",
                "FunctionName": {
                    "Ref": "AIExplainerFunction"
                },
                "Principal": "apigateway.amazonaws.com",
                "SourceArn": {
                    "Fn::Sub": [
                        "arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${__ApiId__}/${__Stage__}/OPTIONS/ai/explanations",
                        {
                            "__ApiId__": {
                                "Ref": "ServerlessRestApi"
                            },
                            "__Stage__": "*"
                        }
                    ]
                }
            }
        },
        "PlanHistoryFunctionCompareOptionsPermissionProd": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
                "Action": "lambda:InvokeFunction",
                "FunctionName": {
                    "Ref": "PlanHistoryFunction"
                },
                "Principal": "apigateway.amazonaws.com",
                "SourceArn": {
                    "Fn::Sub": [
                        "arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${__ApiId__}/${__Stage__}/OPTIONS/compare-plans/*/*",
                        {
                            "__ApiId__": {
                                "Ref": "ServerlessRestApi"
                            },
                            "__Stage__": "*"
                        }
                    ]
                }
            }
        },
        "PostmortemGeneratorFunctionDeleteApiPermissionProd": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
                "Action": "lambda:InvokeFunction",
                "FunctionName": {
                    "Ref": "PostmortemGeneratorFunction"
                },
                "Principal": "apigateway.amazonaws.com",
                "SourceArn": {
                    "Fn::Sub": [
                        "arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${__ApiId__}/${__Stage__}/DELETE/postmortems/*",
                        {
                            "__ApiId__": {
                                "Ref": "ServerlessRestApi"
                            },
                            "__Stage__": "*"
                        }
                    ]
                }
            }
        },
        "AuthHandlerFunctionVerifyOptionsPermissionProd": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
                "Action": "lambda:InvokeFunction",
                "FunctionName": {
                    "Ref": "AuthHandlerFunction"
                },
                "Principal": "apigateway.amazonaws.com",
                "SourceArn": {
                    "Fn::Sub": [
                        "arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${__ApiId__}/${__Stage__}/OPTIONS/auth/verify",
                        {
                            "__ApiId__": {
                                "Ref": "ServerlessRestApi"
                            },
                            "__Stage__": "*"
                        }
                    ]
                }
            }
        },
        "CostAnalyzerFunctionTagCostOptionsPermissionProd": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
                "Action": "lambda:InvokeFunction",
                "FunctionName": {
                    "Ref": "CostAnalyzerFunction"
                },
                "Principal": "apigateway.amazonaws.com",
                "SourceArn": {
                    "Fn::Sub": [
                        "arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${__ApiId__}/${__Stage__}/OPTIONS/costs/by-tag",
                        {
                            "__ApiId__": {
                                "Ref": "ServerlessRestApi"
                            },
                            "__Stage__": "*"
                        }
                    ]
                }
            }
        },
        "RepoScannerFunctionApiOptionsPermissionProd": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
                "Action": "lambda:InvokeFunction",
                "FunctionName": {
                    "Ref": "RepoScannerFunction"
                },
                "Principal": "apigateway.amazonaws.com",
                "SourceArn": {
                    "Fn::Sub": [
                        "arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${__ApiId__}/${__Stage__}/OPTIONS/scan-repos",
                        {
                            "__ApiId__": {
                                "Ref": "ServerlessRestApi"
                            },
                            "__Stage__": "*"
                        }
                    ]
                }
            }
        },
        "AuthHandlerFunctionLoginOptionsPermissionProd": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
                "Action": "lambda:InvokeFunction",
                "FunctionName": {
                    "Ref": "AuthHandlerFunction"
                },
                "Principal": "apigateway.amazonaws.com",
                "SourceArn": {
                    "Fn::Sub": [
                        "arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${__ApiId__}/${__Stage__}/OPTIONS/auth/login",
                        {
                            "__ApiId__": {
                                "Ref": "ServerlessRestApi"
                            },
                            "__Stage__": "*"
                        }
                    ]
                }
            }
        },
        "PlanProcessorFunctionRole": {
            "Type": "AWS::IAM::Role",
            "Properties": {
                "AssumeRolePolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                        {
                            "Action": [
                                "sts:AssumeRole"
                            ],
                            "Effect": "Allow",
                            "Principal": {
                                "Service": [
                                    "lambda.amazonaws.com"
                                ]
                            }
                        }
                    ]
                },
                "ManagedPolicyArns": [
                    "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
                ],
                "Policies": [
                    {
                        "PolicyName": "PlanProcessorFunctionRolePolicy0",
                        "PolicyDocument": {
                            "Statement": [
                                {
                                    "Action": [
                                        "dynamodb:GetItem",
                                        "dynamodb:DeleteItem",
                                        "dynamodb:PutItem",
                                        "dynamodb:Scan",
                                        "dynamodb:Query",
                                        "dynamodb:UpdateItem",
                                        "dynamodb:BatchWriteItem",
                                        "dynamodb:BatchGetItem",
                                        "dynamodb:DescribeTable",
                                        "dynamodb:ConditionCheckItem"
                                    ],
                                    "Effect": "Allow",
                                    "Resource": [
                                        {
                                            "Fn::Sub": [
                                                "arn:${AWS::Partition}:dynamodb:${AWS::Region}:${AWS::AccountId}:table/${tableName}",
                                                {
                                                    "tableName": {
                                                        "Ref": "TerraformPlansTable"
                                                    }
                                                }
                                            ]
                                        },
                                        {
                                            "Fn::Sub": [
                                                "arn:${AWS::Partition}:dynamodb:${AWS::Region}:${AWS::AccountId}:table/${tableName}/index/*",
                                                {
                                                    "tableName": {
                                                        "Ref": "TerraformPlansTable"
                                                    }
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    },
                    {
                        "PolicyName": "PlanProcessorFunctionRolePolicy1",
                        "PolicyDocument": {
                            "Statement": [
                                {
                                    "Effect": "Allow",
                                    "Action": [
                                        "cognito-idp:GetUser"
                                    ],
                                    "Resource": {
                                        "Fn::GetAtt": [
                                            "CloudOpsUserPool",
                                            "Arn"
                                        ]
                                    }
                                }
                            ]
                        }
                    }
                ],
                "Tags": [
                    {
                        "Key": "lambda:createdBy",
                        "Value": "SAM"
                    },
                    {
                        "Key": "Service",
                        "Value": "cloudops-assistant"
                    },
                    {
                        "Key": "Project",
                        "Value": "CloudOpsAssistant"
                    },
                    {
                        "Key": "Environment",
                        "Value": "prod"
                    },
                    {
                        "Key": "Feature",
                        "Value": "plan-processing"
                    }
                ]
            }
        },
        "DriftConfigFunctionStatusApiPermissionProd": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
                "Action": "lambda:InvokeFunction",
                "FunctionName": {
                    "Ref": "DriftConfigFunction"
                },
                "Principal": "apigateway.amazonaws.com",
                "SourceArn": {
                    "Fn::Sub": [
                        "arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${__ApiId__}/${__Stage__}/GET/drift/status",
                        {
                            "__ApiId__": {
                                "Ref": "ServerlessRestApi"
                            },
                            "__Stage__": "*"
                        }
                    ]
                }
            }
        },
        "PostmortemGeneratorFunctionPreviousApiPermissionProd": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
                "Action": "lambda:InvokeFunction",
                "FunctionName": {
                    "Ref": "PostmortemGeneratorFunction"
                },
                "Principal": "apigateway.amazonaws.com",
                "SourceArn": {
                    "Fn::Sub": [
                        "arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${__ApiId__}/${__Stage__}/POST/postmortems/previous",
                        {
                            "__ApiId__": {
                                "Ref": "ServerlessRestApi"
                            },
                            "__Stage__": "*"
                        }
                    ]
                }
            }
        },
        "DriftConfigFunctionUpdateOptionsPermissionProd": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
                "Action": "lambda:InvokeFunction",
                "FunctionName": {
                    "Ref": "DriftConfigFunction"
                },
                "Principal": "apigateway.amazonaws.com",
                "SourceArn": {
                    "Fn::Sub": [
                        "arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${__ApiId__}/${__Stage__}/OPTIONS/drift/update/*",
                        {
                            "__ApiId__": {
                                "Ref": "ServerlessRestApi"
                            },
                            "__Stage__": "*"
                        }
                    ]
                }
            }
        },
        "CostAnalyzerFunctionCurrentCostApiPermissionProd": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
                "Action": "lambda:InvokeFunction",
                "FunctionName": {
                    "Ref": "CostAnalyzerFunction"
                },
                "Principal": "apigateway.amazonaws.com",
                "SourceArn": {
                    "Fn::Sub": [
                        "arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${__ApiId__}/${__Stage__}/GET/costs/current",
                        {
                            "__ApiId__": {
                                "Ref": "ServerlessRestApi"
                            },
                            "__Stage__": "*"
                        }
                    ]
                }
            }
        },
        "AIExplainerFunctionExplainOptionsPermissionProd": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
                "Action": "lambda:InvokeFunction",
                "FunctionName": {
                    "Ref": "AIExplainerFunction"
                },
                "Principal": "apigateway.amazonaws.com",
                "SourceArn": {
                    "Fn::Sub": [
                        "arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${__ApiId__}/${__Stage__}/OPTIONS/ai/explain",
                        {
                            "__ApiId__": {
                                "Ref": "ServerlessRestApi"
                            },
                            "__Stage__": "*"
                        }
                    ]
                }
            }
        },
        "PlanHistoryFunctionHistoryOptionsPermissionProd": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
                "Action": "lambda:InvokeFunction",
                "FunctionName": {
                    "Ref": "PlanHistoryFunction"
                },
                "Principal": "apigateway.amazonaws.com",
                "SourceArn": {
                    "Fn::Sub": [
                        "arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${__ApiId__}/${__Stage__}/OPTIONS/plan-history/*",
                        {
                            "__ApiId__": {
                                "Ref": "ServerlessRestApi"
                            },
                            "__Stage__": "*"
                        }
                    ]
                }
            }
        },
        "BudgetManagerFunctionBudgetAlertsOptionsPermissionProd": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
                "Action": "lambda:InvokeFunction",
                "FunctionName": {
                    "Ref": "BudgetManagerFunction"
                },
                "Principal": "apigateway.amazonaws.com",
                "SourceArn": {
                    "Fn::Sub": [
                        "arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${__ApiId__}/${__Stage__}/OPTIONS/budgets/alerts",
                        {
                            "__ApiId__": {
                                "Ref": "ServerlessRestApi"
                            },
                            "__Stage__": "*"
                        }
                    ]
                }
            }
        },
        "PostmortemGeneratorFunctionListApiPermissionProd": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
                "Action": "lambda:InvokeFunction",
                "FunctionName": {
                    "Ref": "PostmortemGeneratorFunction"
                },
                "Principal": "apigateway.amazonaws.com",
                "SourceArn": {
                    "Fn::Sub": [
                        "arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${__ApiId__}/${__Stage__}/GET/postmortems",
                        {
                            "__ApiId__": {
                                "Ref": "ServerlessRestApi"
                            },
                            "__Stage__": "*"
                        }
                    ]
                }
            }
        },
        "PlanProcessorFunction": {
            "Type": "AWS::Lambda::Function",
            "Metadata": {
                "SamResourceId": "PlanProcessorFunction"
            },
            "Properties": {
                "Code": {
                    "S3Bucket": "aws-sam-cli-managed-default-samclisourcebucket-bvyo4fudayqr",
                    "S3Key": "cloudops-assistant/4489e2f4581cec3917cdfe256a0f82c7"
                },
                "Handler": "plan_processor.lambda_handler",
                "MemorySize": 512,
                "Role": {
                    "Fn::GetAtt": [
                        "PlanProcessorFunctionRole",
                        "Arn"
                    ]
                },
                "Runtime": "python3.13",
                "Timeout": 60,
                "Environment": {
                    "Variables": {
                        "USER_POOL_ID": {
                            "Ref": "CloudOpsUserPool"
                        },
                        "USER_POOL_CLIENT_ID": {
                            "Ref": "CloudOpsUserPoolClient"
                        }
                    }
                },
                "Tags": [
                    {
                        "Key": "lambda:createdBy",
                        "Value": "SAM"
                    },
                    {
                        "Key": "Service",
                        "Value": "cloudops-assistant"
                    },
                    {
                        "Key": "Project",
                        "Value": "CloudOpsAssistant"
                    },
                    {
                        "Key": "Environment",
                        "Value": "prod"
                    },
                    {
                        "Key": "Feature",
                        "Value": "plan-processing"
                    }
                ]
            }
        },
        "AuthHandlerFunctionLoginApiPermissionProd": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
                "Action": "lambda:InvokeFunction",
                "FunctionName": {
                    "Ref": "AuthHandlerFunction"
                },
                "Principal": "apigateway.amazonaws.com",
                "SourceArn": {
                    "Fn::Sub": [
                        "arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${__ApiId__}/${__Stage__}/POST/auth/login",
                        {
                            "__ApiId__": {
                                "Ref": "ServerlessRestApi"
                            },
                            "__Stage__": "*"
                        }
                    ]
                }
            }
        },
        "PostmortemGeneratorFunctionGenerateApiPermissionProd": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
                "Action": "lambda:InvokeFunction",
                "FunctionName": {
                    "Ref": "PostmortemGeneratorFunction"
                },
                "Principal": "apigateway.amazonaws.com",
                "SourceArn": {
                    "Fn::Sub": [
                        "arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${__ApiId__}/${__Stage__}/POST/postmortems/generate",
                        {
                            "__ApiId__": {
                                "Ref": "ServerlessRestApi"
                            },
                            "__Stage__": "*"
                        }
                    ]
                }
            }
        },
        "PostmortemGeneratorFunctionUsersOptionsPermissionProd": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
                "Action": "lambda:InvokeFunction",
                "FunctionName": {
                    "Ref": "PostmortemGeneratorFunction"
                },
                "Principal": "apigateway.amazonaws.com",
                "SourceArn": {
                    "Fn::Sub": [
                        "arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${__ApiId__}/${__Stage__}/OPTIONS/users",
                        {
                            "__ApiId__": {
                                "Ref": "ServerlessRestApi"
                            },
                            "__Stage__": "*"
                        }
                    ]
                }
            }
        },
        "CostAnalyzerFunction": {
            "Type": "AWS::Lambda::Function",
            "Metadata": {
                "SamResourceId": "CostAnalyzerFunction"
            },
            "Properties": {
                "Code": {
                    "S3Bucket": "aws-sam-cli-managed-default-samclisourcebucket-bvyo4fudayqr",
                    "S3Key": "cloudops-assistant/4489e2f4581cec3917cdfe256a0f82c7"
                },
                "Handler": "cost_analyzer.lambda_handler",
                "MemorySize": 256,
                "Role": {
                    "Fn::GetAtt": [
                        "CostAnalyzerFunctionRole",
                        "Arn"
                    ]
                },
                "Runtime": "python3.13",
                "Timeout": 30,
                "Environment": {
                    "Variables": {
                        "USER_POOL_ID": {
                            "Ref": "CloudOpsUserPool"
                        },
                        "USER_POOL_CLIENT_ID": {
                            "Ref": "CloudOpsUserPoolClient"
                        }
                    }
                },
                "Tags": [
                    {
                        "Key": "lambda:createdBy",
                        "Value": "SAM"
                    },
                    {
                        "Key": "Service",
                        "Value": "cloudops-assistant"
                    },
                    {
                        "Key": "Project",
                        "Value": "CloudOpsAssistant"
                    },
                    {
                        "Key": "Environment",
                        "Value": "prod"
                    },
                    {
                        "Key": "Feature",
                        "Value": "cost-analysis"
                    }
                ]
            }
        },
        "PostmortemGeneratorFunction": {
            "Type": "AWS::Lambda::Function",
            "Metadata": {
                "SamResourceId": "PostmortemGeneratorFunction"
            },
            "Properties": {
                "Code": {
                    "S3Bucket": "aws-sam-cli-managed-default-samclisourcebucket-bvyo4fudayqr",
                    "S3Key": "cloudops-assistant/4489e2f4581cec3917cdfe256a0f82c7"
                },
                "Handler": "postmortem_generator.lambda_handler",
                "MemorySize": 512,
                "Role": {
                    "Fn::GetAtt": [
                        "PostmortemGeneratorFunctionRole",
                        "Arn"
                    ]
                },
                "Runtime": "python3.13",
                "Timeout": 60,
                "Environment": {
                    "Variables": {
                        "USER_POOL_ID": {
                            "Ref": "CloudOpsUserPool"
                        },
                        "USER_POOL_CLIENT_ID": {
                            "Ref": "CloudOpsUserPoolClient"
                        }
                    }
                },
                "Tags": [
                    {
                        "Key": "lambda:createdBy",
                        "Value": "SAM"
                    },
                    {
                        "Key": "Service",
                        "Value": "cloudops-assistant"
                    },
                    {
                        "Key": "Project",
                        "Value": "CloudOpsAssistant"
                    },
                    {
                        "Key": "Environment",
                        "Value": "prod"
                    },
                    {
                        "Key": "Feature",
                        "Value": "postmortem-generator"
                    }
                ]
            }
        },
        "DriftConfigFunctionConfigureOptionsPermissionProd": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
                "Action": "lambda:InvokeFunction",
                "FunctionName": {
                    "Ref": "DriftConfigFunction"
                },
                "Principal": "apigateway.amazonaws.com",
                "SourceArn": {
                    "Fn::Sub": [
                        "arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${__ApiId__}/${__Stage__}/OPTIONS/drift/configure",
                        {
                            "__ApiId__": {
                                "Ref": "ServerlessRestApi"
                            },
                            "__Stage__": "*"
                        }
                    ]
                }
            }
        },
        "AIExplainerFunctionExplainApiPermissionProd": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
                "Action": "lambda:InvokeFunction",
                "FunctionName": {
                    "Ref": "AIExplainerFunction"
                },
                "Principal": "apigateway.amazonaws.com",
                "SourceArn": {
                    "Fn::Sub": [
                        "arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${__ApiId__}/${__Stage__}/POST/ai/explain",
                        {
                            "__ApiId__": {
                                "Ref": "ServerlessRestApi"
                            },
                            "__Stage__": "*"
                        }
                    ]
                }
            }
        },
        "DriftConfigFunctionManualScanApiPermissionProd": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
                "Action": "lambda:InvokeFunction",
                "FunctionName": {
                    "Ref": "DriftConfigFunction"
                },
                "Principal": "apigateway.amazonaws.com",
                "SourceArn": {
                    "Fn::Sub": [
                        "arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${__ApiId__}/${__Stage__}/POST/drift/scan/*",
                        {
                            "__ApiId__": {
                                "Ref": "ServerlessRestApi"
                            },
                            "__Stage__": "*"
                        }
                    ]
                }
            }
        },
        "AIExplainerFunctionRole": {
            "Type": "AWS::IAM::Role",
            "Properties": {
                "AssumeRolePolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                        {
                            "Action": [
                                "sts:AssumeRole"
                            ],
                            "Effect": "Allow",
                            "Principal": {
                                "Service": [
                                    "lambda.amazonaws.com"
                                ]
                            }
                        }
                    ]
                },
                "ManagedPolicyArns": [
                    "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
                ],
                "Policies": [
                    {
                        "PolicyName": "AIExplainerFunctionRolePolicy0",
                        "PolicyDocument": {
                            "Statement": [
                                {
                                    "Action": [
                                        "dynamodb:GetItem",
                                        "dynamodb:DeleteItem",
                                        "dynamodb:PutItem",
                                        "dynamodb:Scan",
                                        "dynamodb:Query",
                                        "dynamodb:UpdateItem",
                                        "dynamodb:BatchWriteItem",
                                        "dynamodb:BatchGetItem",
                                        "dynamodb:DescribeTable",
                                        "dynamodb:ConditionCheckItem"
                                    ],
                                    "Effect": "Allow",
                                    "Resource": [
                                        {
                                            "Fn::Sub": [
                                                "arn:${AWS::Partition}:dynamodb:${AWS::Region}:${AWS::AccountId}:table/${tableName}",
                                                {
                                                    "tableName": {
                                                        "Ref": "TerraformPlansTable"
                                                    }
                                                }
                                            ]
                                        },
                                        {
                                            "Fn::Sub": [
                                                "arn:${AWS::Partition}:dynamodb:${AWS::Region}:${AWS::AccountId}:table/${tableName}/index/*",
                                                {
                                                    "tableName": {
                                                        "Ref": "TerraformPlansTable"
                                                    }
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    },
                    {
                        "PolicyName": "AIExplainerFunctionRolePolicy1",
                        "PolicyDocument": {
                            "Statement": [
                                {
                                    "Effect": "Allow",
                                    "Action": [
                                        "bedrock:InvokeModel",
                                        "cognito-idp:GetUser"
                                    ],
                                    "Resource": "*"
                                }
                            ]
                        }
                    }
                ],
                "Tags": [
                    {
                        "Key": "lambda:createdBy",
                        "Value": "SAM"
                    },
                    {
                        "Key": "Service",
                        "Value": "cloudops-assistant"
                    },
                    {
                        "Key": "Project",
                        "Value": "CloudOpsAssistant"
                    },
                    {
                        "Key": "Environment",
                        "Value": "prod"
                    },
                    {
                        "Key": "Feature",
                        "Value": "ai-explainer"
                    }
                ]
            }
        },
        "PostmortemGeneratorFunctionUsersApiPermissionProd": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
                "Action": "lambda:InvokeFunction",
                "FunctionName": {
                    "Ref": "PostmortemGeneratorFunction"
                },
                "Principal": "apigateway.amazonaws.com",
                "SourceArn": {
                    "Fn::Sub": [
                        "arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${__ApiId__}/${__Stage__}/GET/users",
                        {
                            "__ApiId__": {
                                "Ref": "ServerlessRestApi"
                            },
                            "__Stage__": "*"
                        }
                    ]
                }
            }
        },
        "BudgetManagerFunctionDeleteBudgetOptionsPermissionProd": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
                "Action": "lambda:InvokeFunction",
                "FunctionName": {
                    "Ref": "BudgetManagerFunction"
                },
                "Principal": "apigateway.amazonaws.com",
                "SourceArn": {
                    "Fn::Sub": [
                        "arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${__ApiId__}/${__Stage__}/OPTIONS/budgets/delete/*",
                        {
                            "__ApiId__": {
                                "Ref": "ServerlessRestApi"
                            },
                            "__Stage__": "*"
                        }
                    ]
                }
            }
        },
        "PostmortemGeneratorFunctionConversationOptionsPermissionProd": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
                "Action": "lambda:InvokeFunction",
                "FunctionName": {
                    "Ref": "PostmortemGeneratorFunction"
                },
                "Principal": "apigateway.amazonaws.com",
                "SourceArn": {
                    "Fn::Sub": [
                        "arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${__ApiId__}/${__Stage__}/OPTIONS/postmortems/conversation",
                        {
                            "__ApiId__": {
                                "Ref": "ServerlessRestApi"
                            },
                            "__Stage__": "*"
                        }
                    ]
                }
            }
        },
        "PostmortemsTable": {
            "Type": "AWS::DynamoDB::Table",
            "Properties": {
                "TableName": "PostmortemsTable",
                "BillingMode": "PAY_PER_REQUEST",
                "AttributeDefinitions": [
                    {
                        "AttributeName": "user_id",
                        "AttributeType": "S"
                    },
                    {
                        "AttributeName": "postmortem_id",
                        "AttributeType": "S"
                    }
                ],
                "KeySchema": [
                    {
                        "AttributeName": "user_id",
                        "KeyType": "HASH"
                    },
                    {
                        "AttributeName": "postmortem_id",
                        "KeyType": "RANGE"
                    }
                ],
                "TimeToLiveSpecification": {
                    "AttributeName": "ttl",
                    "Enabled": true
                },
                "PointInTimeRecoverySpecification": {
                    "PointInTimeRecoveryEnabled": true
                },
                "SSESpecification": {
                    "SSEEnabled": true
                },
                "Tags": [
                    {
                        "Key": "Service",
                        "Value": "cloudops-assistant"
                    },
                    {
                        "Key": "Feature",
                        "Value": "postmortem-generator"
                    }
                ]
            },
            "Metadata": {
                "SamResourceId": "PostmortemsTable"
            }
        },
        "CloudOpsUserPool": {
            "Type": "AWS::Cognito::UserPool",
            "Properties": {
                "UserPoolName": "cloudops-assistant-users",
                "AutoVerifiedAttributes": [
                    "email"
                ],
                "UsernameAttributes": [
                    "email"
                ],
                "Policies": {
                    "PasswordPolicy": {
                        "MinimumLength": 8,
                        "RequireUppercase": true,
                        "RequireLowercase": true,
                        "RequireNumbers": true,
                        "RequireSymbols": false
                    }
                },
                "Schema": [
                    {
                        "Name": "email",
                        "AttributeDataType": "String",
                        "Required": true,
                        "Mutable": true
                    }
                ],
                "UserPoolTags": {
                    "Service": "cloudops-assistant",
                    "Feature": "authentication"
                }
            },
            "Metadata": {
                "SamResourceId": "CloudOpsUserPool"
            }
        },
        "RepoScannerFunction": {
            "Type": "AWS::Lambda::Function",
            "Metadata": {
                "SamResourceId": "RepoScannerFunction"
            },
            "Properties": {
                "Code": {
                    "S3Bucket": "aws-sam-cli-managed-default-samclisourcebucket-bvyo4fudayqr",
                    "S3Key": "cloudops-assistant/4489e2f4581cec3917cdfe256a0f82c7"
                },
                "Handler": "repo_scanner.lambda_handler",
                "MemorySize": 512,
                "Role": {
                    "Fn::GetAtt": [
                        "RepoScannerFunctionRole",
                        "Arn"
                    ]
                },
                "Runtime": "python3.13",
                "Timeout": 300,
                "Environment": {
                    "Variables": {
                        "USER_POOL_ID": {
                            "Ref": "CloudOpsUserPool"
                        },
                        "USER_POOL_CLIENT_ID": {
                            "Ref": "CloudOpsUserPoolClient"
                        }
                    }
                },
                "Tags": [
                    {
                        "Key": "lambda:createdBy",
                        "Value": "SAM"
                    },
                    {
                        "Key": "Service",
                        "Value": "cloudops-assistant"
                    },
                    {
                        "Key": "Project",
                        "Value": "CloudOpsAssistant"
                    },
                    {
                        "Key": "Environment",
                        "Value": "prod"
                    },
                    {
                        "Key": "Feature",
                        "Value": "repo-scanning"
                    }
                ],
                "Layers": [
                    "arn:aws:lambda:us-east-1:553035198032:layer:git-lambda2:8"
                ]
            }
        },
        "BudgetManagerFunctionBudgetAlertsApiPermissionProd": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
                "Action": "lambda:InvokeFunction",
                "FunctionName": {
                    "Ref": "BudgetManagerFunction"
                },
                "Principal": "apigateway.amazonaws.com",
                "SourceArn": {
                    "Fn::Sub": [
                        "arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${__ApiId__}/${__Stage__}/GET/budgets/alerts",
                        {
                            "__ApiId__": {
                                "Ref": "ServerlessRestApi"
                            },
                            "__Stage__": "*"
                        }
                    ]
                }
            }
        },
        "ServerlessRestApiDeployment4044e49a87": {
            "Type": "AWS::ApiGateway::Deployment",
            "Properties": {
                "Description": "RestApi deployment id: 4044e49a870c90212e335b4385a9b66d5dbe1da3",
                "RestApiId": {
                    "Ref": "ServerlessRestApi"
                },
                "StageName": "Stage"
            }
        },
        "CostAnalyzerFunctionRole": {
            "Type": "AWS::IAM::Role",
            "Properties": {
                "AssumeRolePolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                        {
                            "Action": [
                                "sts:AssumeRole"
                            ],
                            "Effect": "Allow",
                            "Principal": {
                                "Service": [
                                    "lambda.amazonaws.com"
                                ]
                            }
                        }
                    ]
                },
                "ManagedPolicyArns": [
                    "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
                ],
                "Policies": [
                    {
                        "PolicyName": "CostAnalyzerFunctionRolePolicy0",
                        "PolicyDocument": {
                            "Statement": [
                                {
                                    "Action": [
                                        "dynamodb:GetItem",
                                        "dynamodb:DeleteItem",
                                        "dynamodb:PutItem",
                                        "dynamodb:Scan",
                                        "dynamodb:Query",
                                        "dynamodb:UpdateItem",
                                        "dynamodb:BatchWriteItem",
                                        "dynamodb:BatchGetItem",
                                        "dynamodb:DescribeTable",
                                        "dynamodb:ConditionCheckItem"
                                    ],
                                    "Effect": "Allow",
                                    "Resource": [
                                        {
                                            "Fn::Sub": [
                                                "arn:${AWS::Partition}:dynamodb:${AWS::Region}:${AWS::AccountId}:table/${tableName}",
                                                {
                                                    "tableName": {
                                                        "Ref": "CostCacheTable"
                                                    }
                                                }
                                            ]
                                        },
                                        {
                                            "Fn::Sub": [
                                                "arn:${AWS::Partition}:dynamodb:${AWS::Region}:${AWS::AccountId}:table/${tableName}/index/*",
                                                {
                                                    "tableName": {
                                                        "Ref": "CostCacheTable"
                                                    }
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    },
                    {
                        "PolicyName": "CostAnalyzerFunctionRolePolicy1",
                        "PolicyDocument": {
                            "Statement": [
                                {
                                    "Effect": "Allow",
                                    "Action": [
                                        "ce:GetCostAndUsage",
                                        "ce:GetDimensionValues",
                                        "ce:GetUsageReport",
                                        "cognito-idp:GetUser"
                                    ],
                                    "Resource": "*"
                                }
                            ]
                        }
                    }
                ],
                "Tags": [
                    {
                        "Key": "lambda:createdBy",
                        "Value": "SAM"
                    },
                    {
                        "Key": "Service",
                        "Value": "cloudops-assistant"
                    },
                    {
                        "Key": "Project",
                        "Value": "CloudOpsAssistant"
                    },
                    {
                        "Key": "Environment",
                        "Value": "prod"
                    },
                    {
                        "Key": "Feature",
                        "Value": "cost-analysis"
                    }
                ]
            }
        },
        "TerraformPlansTable": {
            "Type": "AWS::DynamoDB::Table",
            "Properties": {
                "TableName": "cloudops-assistant-terraform-plans",
                "BillingMode": "PAY_PER_REQUEST",
                "AttributeDefinitions": [
                    {
                        "AttributeName": "plan_id",
                        "AttributeType": "S"
                    },
                    {
                        "AttributeName": "repo_name",
                        "AttributeType": "S"
                    },
                    {
                        "AttributeName": "timestamp",
                        "AttributeType": "S"
                    }
                ],
                "KeySchema": [
                    {
                        "AttributeName": "plan_id",
                        "KeyType": "HASH"
                    }
                ],
                "GlobalSecondaryIndexes": [
                    {
                        "IndexName": "repo-timestamp-index",
                        "KeySchema": [
                            {
                                "AttributeName": "repo_name",
                                "KeyType": "HASH"
                            },
                            {
                                "AttributeName": "timestamp",
                                "KeyType": "RANGE"
                            }
                        ],
                        "Projection": {
                            "ProjectionType": "ALL"
                        }
                    }
                ],
                "TimeToLiveSpecification": {
                    "AttributeName": "ttl",
                    "Enabled": true
                },
                "PointInTimeRecoverySpecification": {
                    "PointInTimeRecoveryEnabled": true
                },
                "SSESpecification": {
                    "SSEEnabled": true
                },
                "Tags": [
                    {
                        "Key": "Service",
                        "Value": "cloudops-assistant"
                    },
                    {
                        "Key": "Feature",
                        "Value": "plan-history"
                    }
                ]
            },
            "Metadata": {
                "SamResourceId": "TerraformPlansTable"
            }
        },
        "BudgetManagerFunctionBudgetStatusOptionsPermissionProd": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
                "Action": "lambda:InvokeFunction",
                "FunctionName": {
                    "Ref": "BudgetManagerFunction"
                },
                "Principal": "apigateway.amazonaws.com",
                "SourceArn": {
                    "Fn::Sub": [
                        "arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${__ApiId__}/${__Stage__}/OPTIONS/budgets/status",
                        {
                            "__ApiId__": {
                                "Ref": "ServerlessRestApi"
                            },
                            "__Stage__": "*"
                        }
                    ]
                }
            }
        },
        "PostmortemGeneratorFunctionGenerateOptionsPermissionProd": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
                "Action": "lambda:InvokeFunction",
                "FunctionName": {
                    "Ref": "PostmortemGeneratorFunction"
                },
                "Principal": "apigateway.amazonaws.com",
                "SourceArn": {
                    "Fn::Sub": [
                        "arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${__ApiId__}/${__Stage__}/OPTIONS/postmortems/generate",
                        {
                            "__ApiId__": {
                                "Ref": "ServerlessRestApi"
                            },
                            "__Stage__": "*"
                        }
                    ]
                }
            }
        },
        "ServerlessRestApi": {
            "Type": "AWS::ApiGateway::RestApi",
            "Properties": {
                "Body": {
                    "info": {
                        "version": "1.0",
                        "title": {
                            "Ref": "AWS::StackName"
                        }
                    },
                    "paths": {
                        "/postmortems/{postmortem_id}": {
                            "put": {
                                "x-amazon-apigateway-integration": {
                                    "httpMethod": "POST",
                                    "type": "aws_proxy",
                                    "uri": {
                                        "Fn::Sub": "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${PostmortemGeneratorFunction.Arn}/invocations"
                                    }
                                },
                                "responses": {}
                            },
                            "get": {
                                "x-amazon-apigateway-integration": {
                                    "httpMethod": "POST",
                                    "type": "aws_proxy",
                                    "uri": {
                                        "Fn::Sub": "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${PostmortemGeneratorFunction.Arn}/invocations"
                                    }
                                },
                                "responses": {}
                            },
                            "options": {
                                "x-amazon-apigateway-integration": {
                                    "httpMethod": "POST",
                                    "type": "aws_proxy",
                                    "uri": {
                                        "Fn::Sub": "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${PostmortemGeneratorFunction.Arn}/invocations"
                                    }
                                },
                                "responses": {}
                            },
                            "delete": {
                                "x-amazon-apigateway-integration": {
                                    "httpMethod": "POST",
                                    "type": "aws_proxy",
                                    "uri": {
                                        "Fn::Sub": "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${PostmortemGeneratorFunction.Arn}/invocations"
                                    }
                                },
                                "responses": {}
                            }
                        },
                        "/auth/verify": {
                            "post": {
                                "x-amazon-apigateway-integration": {
                                    "httpMethod": "POST",
                                    "type": "aws_proxy",
                                    "uri": {
                                        "Fn::Sub": "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${AuthHandlerFunction.Arn}/invocations"
                                    }
                                },
                                "responses": {}
                            },
                            "options": {
                                "x-amazon-apigateway-integration": {
                                    "httpMethod": "POST",
                                    "type": "aws_proxy",
                                    "uri": {
                                        "Fn::Sub": "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${AuthHandlerFunction.Arn}/invocations"
                                    }
                                },
                                "responses": {}
                            }
                        },
                        "/budgets/configure": {
                            "post": {
                                "x-amazon-apigateway-integration": {
                                    "httpMethod": "POST",
                                    "type": "aws_proxy",
                                    "uri": {
                                        "Fn::Sub": "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${BudgetManagerFunction.Arn}/invocations"
                                    }
                                },
                                "responses": {}
                            },
                            "options": {
                                "x-amazon-apigateway-integration": {
                                    "httpMethod": "POST",
                                    "type": "aws_proxy",
                                    "uri": {
                                        "Fn::Sub": "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${BudgetManagerFunction.Arn}/invocations"
                                    }
                                },
                                "responses": {}
                            }
                        },
                        "/costs/current": {
                            "options": {
                                "x-amazon-apigateway-integration": {
                                    "httpMethod": "POST",
                                    "type": "aws_proxy",
                                    "uri": {
                                        "Fn::Sub": "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${CostAnalyzerFunction.Arn}/invocations"
                                    }
                                },
                                "responses": {}
                            },
                            "get": {
                                "x-amazon-apigateway-integration": {
                                    "httpMethod": "POST",
                                    "type": "aws_proxy",
                                    "uri": {
                                        "Fn::Sub": "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${CostAnalyzerFunction.Arn}/invocations"
                                    }
                                },
                                "responses": {}
                            }
                        },
                        "/postmortems/previous": {
                            "post": {
                                "x-amazon-apigateway-integration": {
                                    "httpMethod": "POST",
                                    "type": "aws_proxy",
                                    "uri": {
                                        "Fn::Sub": "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${PostmortemGeneratorFunction.Arn}/invocations"
                                    }
                                },
                                "responses": {}
                            },
                            "options": {
                                "x-amazon-apigateway-integration": {
                                    "httpMethod": "POST",
                                    "type": "aws_proxy",
                                    "uri": {
                                        "Fn::Sub": "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${PostmortemGeneratorFunction.Arn}/invocations"
                                    }
                                },
                                "responses": {}
                            }
                        },
                        "/budgets/alerts": {
                            "options": {
                                "x-amazon-apigateway-integration": {
                                    "httpMethod": "POST",
                                    "type": "aws_proxy",
                                    "uri": {
                                        "Fn::Sub": "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${BudgetManagerFunction.Arn}/invocations"
                                    }
                                },
                                "responses": {}
                            },
                            "get": {
                                "x-amazon-apigateway-integration": {
                                    "httpMethod": "POST",
                                    "type": "aws_proxy",
                                    "uri": {
                                        "Fn::Sub": "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${BudgetManagerFunction.Arn}/invocations"
                                    }
                                },
                                "responses": {}
                            }
                        },
                        "/drift/configure": {
                            "post": {
                                "x-amazon-apigateway-integration": {
                                    "httpMethod": "POST",
                                    "type": "aws_proxy",
                                    "uri": {
                                        "Fn::Sub": "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${DriftConfigFunction.Arn}/invocations"
                                    }
                                },
                                "responses": {}
                            },
                            "options": {
                                "x-amazon-apigateway-integration": {
                                    "httpMethod": "POST",
                                    "type": "aws_proxy",
                                    "uri": {
                                        "Fn::Sub": "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${DriftConfigFunction.Arn}/invocations"
                                    }
                                },
                                "responses": {}
                            }
                        },
                        "/costs/services": {
                            "options": {
                                "x-amazon-apigateway-integration": {
                                    "httpMethod": "POST",
                                    "type": "aws_proxy",
                                    "uri": {
                                        "Fn::Sub": "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${CostAnalyzerFunction.Arn}/invocations"
                                    }
                                },
                                "responses": {}
                            },
                            "get": {
                                "x-amazon-apigateway-integration": {
                                    "httpMethod": "POST",
                                    "type": "aws_proxy",
                                    "uri": {
                                        "Fn::Sub": "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${CostAnalyzerFunction.Arn}/invocations"
                                    }
                                },
                                "responses": {}
                            }
                        },
                        "/postmortems": {
                            "post": {
                                "x-amazon-apigateway-integration": {
                                    "httpMethod": "POST",
                                    "type": "aws_proxy",
                                    "uri": {
                                        "Fn::Sub": "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${PostmortemGeneratorFunction.Arn}/invocations"
                                    }
                                },
                                "responses": {}
                            },
                            "options": {
                                "x-amazon-apigateway-integration": {
                                    "httpMethod": "POST",
                                    "type": "aws_proxy",
                                    "uri": {
                                        "Fn::Sub": "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${PostmortemGeneratorFunction.Arn}/invocations"
                                    }
                                },
                                "responses": {}
                            },
                            "get": {
                                "x-amazon-apigateway-integration": {
                                    "httpMethod": "POST",
                                    "type": "aws_proxy",
                                    "uri": {
                                        "Fn::Sub": "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${PostmortemGeneratorFunction.Arn}/invocations"
                                    }
                                },
                                "responses": {}
                            }
                        },
                        "/budgets/delete/{budget_id}": {
                            "options": {
                                "x-amazon-apigateway-integration": {
                                    "httpMethod": "POST",
                                    "type": "aws_proxy",
                                    "uri": {
                                        "Fn::Sub": "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${BudgetManagerFunction.Arn}/invocations"
                                    }
                                },
                                "responses": {}
                            },
                            "delete": {
                                "x-amazon-apigateway-integration": {
                                    "httpMethod": "POST",
                                    "type": "aws_proxy",
                                    "uri": {
                                        "Fn::Sub": "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${BudgetManagerFunction.Arn}/invocations"
                                    }
                                },
                                "responses": {}
                            }
                        },
                        "/postmortems/conversation": {
                            "post": {
                                "x-amazon-apigateway-integration": {
                                    "httpMethod": "POST",
                                    "type": "aws_proxy",
                                    "uri": {
                                        "Fn::Sub": "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${PostmortemGeneratorFunction.Arn}/invocations"
                                    }
                                },
                                "responses": {}
                            },
                            "options": {
                                "x-amazon-apigateway-integration": {
                                    "httpMethod": "POST",
                                    "type": "aws_proxy",
                                    "uri": {
                                        "Fn::Sub": "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${PostmortemGeneratorFunction.Arn}/invocations"
                                    }
                                },
                                "responses": {}
                            }
                        },
                        "/ai/explanations": {
                            "options": {
                                "x-amazon-apigateway-integration": {
                                    "httpMethod": "POST",
                                    "type": "aws_proxy",
                                    "uri": {
                                        "Fn::Sub": "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${AIExplainerFunction.Arn}/invocations"
                                    }
                                },
                                "responses": {}
                            },
                            "get": {
                                "x-amazon-apigateway-integration": {
                                    "httpMethod": "POST",
                                    "type": "aws_proxy",
                                    "uri": {
                                        "Fn::Sub": "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${AIExplainerFunction.Arn}/invocations"
                                    }
                                },
                                "responses": {}
                            }
                        },
                        "/drift/scan/{config_id}": {
                            "post": {
                                "x-amazon-apigateway-integration": {
                                    "httpMethod": "POST",
                                    "type": "aws_proxy",
                                    "uri": {
                                        "Fn::Sub": "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${DriftConfigFunction.Arn}/invocations"
                                    }
                                },
                                "responses": {}
                            },
                            "options": {
                                "x-amazon-apigateway-integration": {
                                    "httpMethod": "POST",
                                    "type": "aws_proxy",
                                    "uri": {
                                        "Fn::Sub": "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${DriftConfigFunction.Arn}/invocations"
                                    }
                                },
                                "responses": {}
                            }
                        },
                        "/auth/login": {
                            "post": {
                                "x-amazon-apigateway-integration": {
                                    "httpMethod": "POST",
                                    "type": "aws_proxy",
                                    "uri": {
                                        "Fn::Sub": "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${AuthHandlerFunction.Arn}/invocations"
                                    }
                                },
                                "responses": {}
                            },
                            "options": {
                                "x-amazon-apigateway-integration": {
                                    "httpMethod": "POST",
                                    "type": "aws_proxy",
                                    "uri": {
                                        "Fn::Sub": "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${AuthHandlerFunction.Arn}/invocations"
                                    }
                                },
                                "responses": {}
                            }
                        },
                        "/drift/delete/{config_id}": {
                            "options": {
                                "x-amazon-apigateway-integration": {
                                    "httpMethod": "POST",
                                    "type": "aws_proxy",
                                    "uri": {
                                        "Fn::Sub": "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${DriftConfigFunction.Arn}/invocations"
                                    }
                                },
                                "responses": {}
                            },
                            "delete": {
                                "x-amazon-apigateway-integration": {
                                    "httpMethod": "POST",
                                    "type": "aws_proxy",
                                    "uri": {
                                        "Fn::Sub": "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${DriftConfigFunction.Arn}/invocations"
                                    }
                                },
                                "responses": {}
                            }
                        },
                        "/costs/by-tag": {
                            "options": {
                                "x-amazon-apigateway-integration": {
                                    "httpMethod": "POST",
                                    "type": "aws_proxy",
                                    "uri": {
                                        "Fn::Sub": "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${CostAnalyzerFunction.Arn}/invocations"
                                    }
                                },
                                "responses": {}
                            },
                            "get": {
                                "x-amazon-apigateway-integration": {
                                    "httpMethod": "POST",
                                    "type": "aws_proxy",
                                    "uri": {
                                        "Fn::Sub": "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${CostAnalyzerFunction.Arn}/invocations"
                                    }
                                },
                                "responses": {}
                            }
                        },
                        "/compare-plans/{plan1}/{plan2}": {
                            "options": {
                                "x-amazon-apigateway-integration": {
                                    "httpMethod": "POST",
                                    "type": "aws_proxy",
                                    "uri": {
                                        "Fn::Sub": "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${PlanHistoryFunction.Arn}/invocations"
                                    }
                                },
                                "responses": {}
                            },
                            "get": {
                                "x-amazon-apigateway-integration": {
                                    "httpMethod": "POST",
                                    "type": "aws_proxy",
                                    "uri": {
                                        "Fn::Sub": "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${PlanHistoryFunction.Arn}/invocations"
                                    }
                                },
                                "responses": {}
                            }
                        },
                        "/plan-details/{plan_id}": {
                            "options": {
                                "x-amazon-apigateway-integration": {
                                    "httpMethod": "POST",
                                    "type": "aws_proxy",
                                    "uri": {
                                        "Fn::Sub": "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${PlanHistoryFunction.Arn}/invocations"
                                    }
                                },
                                "responses": {}
                            },
                            "get": {
                                "x-amazon-apigateway-integration": {
                                    "httpMethod": "POST",
                                    "type": "aws_proxy",
                                    "uri": {
                                        "Fn::Sub": "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${PlanHistoryFunction.Arn}/invocations"
                                    }
                                },
                                "responses": {}
                            }
                        },
                        "/costs/trends": {
                            "options": {
                                "x-amazon-apigateway-integration": {
                                    "httpMethod": "POST",
                                    "type": "aws_proxy",
                                    "uri": {
                                        "Fn::Sub": "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${CostAnalyzerFunction.Arn}/invocations"
                                    }
                                },
                                "responses": {}
                            },
                            "get": {
                                "x-amazon-apigateway-integration": {
                                    "httpMethod": "POST",
                                    "type": "aws_proxy",
                                    "uri": {
                                        "Fn::Sub": "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${CostAnalyzerFunction.Arn}/invocations"
                                    }
                                },
                                "responses": {}
                            }
                        },
                        "/users": {
                            "options": {
                                "x-amazon-apigateway-integration": {
                                    "httpMethod": "POST",
                                    "type": "aws_proxy",
                                    "uri": {
                                        "Fn::Sub": "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${PostmortemGeneratorFunction.Arn}/invocations"
                                    }
                                },
                                "responses": {}
                            },
                            "get": {
                                "x-amazon-apigateway-integration": {
                                    "httpMethod": "POST",
                                    "type": "aws_proxy",
                                    "uri": {
                                        "Fn::Sub": "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${PostmortemGeneratorFunction.Arn}/invocations"
                                    }
                                },
                                "responses": {}
                            }
                        },
                        "/plan-history/{repo}": {
                            "options": {
                                "x-amazon-apigateway-integration": {
                                    "httpMethod": "POST",
                                    "type": "aws_proxy",
                                    "uri": {
                                        "Fn::Sub": "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${PlanHistoryFunction.Arn}/invocations"
                                    }
                                },
                                "responses": {}
                            },
                            "get": {
                                "x-amazon-apigateway-integration": {
                                    "httpMethod": "POST",
                                    "type": "aws_proxy",
                                    "uri": {
                                        "Fn::Sub": "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${PlanHistoryFunction.Arn}/invocations"
                                    }
                                },
                                "responses": {}
                            }
                        },
                        "/auth/register": {
                            "post": {
                                "x-amazon-apigateway-integration": {
                                    "httpMethod": "POST",
                                    "type": "aws_proxy",
                                    "uri": {
                                        "Fn::Sub": "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${AuthHandlerFunction.Arn}/invocations"
                                    }
                                },
                                "responses": {}
                            },
                            "options": {
                                "x-amazon-apigateway-integration": {
                                    "httpMethod": "POST",
                                    "type": "aws_proxy",
                                    "uri": {
                                        "Fn::Sub": "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${AuthHandlerFunction.Arn}/invocations"
                                    }
                                },
                                "responses": {}
                            }
                        },
                        "/budgets/status": {
                            "options": {
                                "x-amazon-apigateway-integration": {
                                    "httpMethod": "POST",
                                    "type": "aws_proxy",
                                    "uri": {
                                        "Fn::Sub": "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${BudgetManagerFunction.Arn}/invocations"
                                    }
                                },
                                "responses": {}
                            },
                            "get": {
                                "x-amazon-apigateway-integration": {
                                    "httpMethod": "POST",
                                    "type": "aws_proxy",
                                    "uri": {
                                        "Fn::Sub": "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${BudgetManagerFunction.Arn}/invocations"
                                    }
                                },
                                "responses": {}
                            }
                        },
                        "/ai/explain": {
                            "post": {
                                "x-amazon-apigateway-integration": {
                                    "httpMethod": "POST",
                                    "type": "aws_proxy",
                                    "uri": {
                                        "Fn::Sub": "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${AIExplainerFunction.Arn}/invocations"
                                    }
                                },
                                "responses": {}
                            },
                            "options": {
                                "x-amazon-apigateway-integration": {
                                    "httpMethod": "POST",
                                    "type": "aws_proxy",
                                    "uri": {
                                        "Fn::Sub": "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${AIExplainerFunction.Arn}/invocations"
                                    }
                                },
                                "responses": {}
                            }
                        },
                        "/scan-repos": {
                            "post": {
                                "x-amazon-apigateway-integration": {
                                    "httpMethod": "POST",
                                    "type": "aws_proxy",
                                    "uri": {
                                        "Fn::Sub": "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${RepoScannerFunction.Arn}/invocations"
                                    }
                                },
                                "responses": {}
                            },
                            "options": {
                                "x-amazon-apigateway-integration": {
                                    "httpMethod": "POST",
                                    "type": "aws_proxy",
                                    "uri": {
                                        "Fn::Sub": "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${RepoScannerFunction.Arn}/invocations"
                                    }
                                },
                                "responses": {}
                            }
                        },
                        "/drift/update/{config_id}": {
                            "put": {
                                "x-amazon-apigateway-integration": {
                                    "httpMethod": "POST",
                                    "type": "aws_proxy",
                                    "uri": {
                                        "Fn::Sub": "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${DriftConfigFunction.Arn}/invocations"
                                    }
                                },
                                "responses": {}
                            },
                            "options": {
                                "x-amazon-apigateway-integration": {
                                    "httpMethod": "POST",
                                    "type": "aws_proxy",
                                    "uri": {
                                        "Fn::Sub": "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${DriftConfigFunction.Arn}/invocations"
                                    }
                                },
                                "responses": {}
                            }
                        },
                        "/upload-plan": {
                            "post": {
                                "x-amazon-apigateway-integration": {
                                    "httpMethod": "POST",
                                    "type": "aws_proxy",
                                    "uri": {
                                        "Fn::Sub": "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${PlanProcessorFunction.Arn}/invocations"
                                    }
                                },
                                "responses": {}
                            },
                            "options": {
                                "x-amazon-apigateway-integration": {
                                    "httpMethod": "POST",
                                    "type": "aws_proxy",
                                    "uri": {
                                        "Fn::Sub": "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${PlanProcessorFunction.Arn}/invocations"
                                    }
                                },
                                "responses": {}
                            }
                        },
                        "/drift/status": {
                            "options": {
                                "x-amazon-apigateway-integration": {
                                    "httpMethod": "POST",
                                    "type": "aws_proxy",
                                    "uri": {
                                        "Fn::Sub": "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${DriftConfigFunction.Arn}/invocations"
                                    }
                                },
                                "responses": {}
                            },
                            "get": {
                                "x-amazon-apigateway-integration": {
                                    "httpMethod": "POST",
                                    "type": "aws_proxy",
                                    "uri": {
                                        "Fn::Sub": "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${DriftConfigFunction.Arn}/invocations"
                                    }
                                },
                                "responses": {}
                            }
                        },
                        "/postmortems/suggest": {
                            "post": {
                                "x-amazon-apigateway-integration": {
                                    "httpMethod": "POST",
                                    "type": "aws_proxy",
                                    "uri": {
                                        "Fn::Sub": "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${PostmortemGeneratorFunction.Arn}/invocations"
                                    }
                                },
                                "responses": {}
                            },
                            "options": {
                                "x-amazon-apigateway-integration": {
                                    "httpMethod": "POST",
                                    "type": "aws_proxy",
                                    "uri": {
                                        "Fn::Sub": "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${PostmortemGeneratorFunction.Arn}/invocations"
                                    }
                                },
                                "responses": {}
                            }
                        },
                        "/postmortems/generate": {
                            "post": {
                                "x-amazon-apigateway-integration": {
                                    "httpMethod": "POST",
                                    "type": "aws_proxy",
                                    "uri": {
                                        "Fn::Sub": "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${PostmortemGeneratorFunction.Arn}/invocations"
                                    }
                                },
                                "responses": {}
                            },
                            "options": {
                                "x-amazon-apigateway-integration": {
                                    "httpMethod": "POST",
                                    "type": "aws_proxy",
                                    "uri": {
                                        "Fn::Sub": "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${PostmortemGeneratorFunction.Arn}/invocations"
                                    }
                                },
                                "responses": {}
                            }
                        }
                    },
                    "swagger": "2.0"
                }
            }
        }
    }
}
